/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PrincipalMatch,
  PrincipalMatchInterface,
} from "../PrincipalMatch";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_clearing",
        type: "address",
        internalType: "address",
      },
      {
        name: "_manager",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "clearing",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "handleDeposit",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "handleSettlement",
    inputs: [
      {
        name: "orders",
        type: "tuple[]",
        internalType: "struct IClearing.SignedOrder[]",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "witness",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "manager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setNewManager",
    inputs: [
      {
        name: "_newManager",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x60a0346200015257601f620017ba38819003918201601f19168301916001600160401b038311848410176200015657808492604094855283398101031262000152576200005a602062000052836200016a565b92016200016a565b905f54600190600181811c9116801562000147575b60208210146200013357601f8111620000ea575b50507f5072696e636970616c4d6174636800000000000000000000000000000000001c5f55608052600180546001600160a01b0319166001600160a01b039290921691909117905560405161163a908162000180823960805181818160bc0152610c8f0152f35b5f8052601f0160051c7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563908101905b81811062000128575062000083565b5f8155820162000119565b634e487b7160e01b5f52602260045260245ffd5b90607f16906200006f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b0382168203620001525756fe60806040526004361015610018575b361561001657005b005b5f3560e01c8063027cb7c61461007757806306fdde0314610072578063481c6a751461006d5780639ab3f3cc14610068578063d30f945a146100635763f58171df0361000e576107ec565b6106de565b6104b8565b610365565b61020e565b346100e5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e55773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001660805260206080f35b5f80fd5b5f9103126100e557565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6060810190811067ffffffffffffffff82111761013c57604052565b6100f3565b67ffffffffffffffff811161013c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761013c57604052565b5f5b8381106101a75750505f910152565b8181015183820152602001610198565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936101f381518092818752878088019101610196565b0116010190565b90602061020b9281815201906101b7565b90565b346100e5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576040515f805460018160011c916001811691821561035b575b60209160208510841461032e5784875260208701939081156102f1575060011461029a575b6102968661028a81880382610155565b604051918291826101fa565b0390f35b5f80805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8386106102e0575050509101905061028a826102965f61027a565b8054858701529482019481016102c5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016845250505090151560051b01905061028a826102965f61027a565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b92607f1692610255565b346100e5575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e557602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b60405190610160820182811067ffffffffffffffff82111761013c57604052565b67ffffffffffffffff811161013c5760051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116036100e557565b3590610418826103ef565b565b359063ffffffff821682036100e557565b359081151582036100e557565b67ffffffffffffffff811161013c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156100e55780359061048982610438565b926104976040519485610155565b828452602083830101116100e557815f926020809301838601378301015290565b346100e5576060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e55767ffffffffffffffff906004358281116100e557366023820112156100e557806004013591602491610519846103d7565b9360409261052a6040519687610155565b81865260209385602088019360051b850101933685116100e557868101935b85851061058a57898989358281116100e557610569903690600401610472565b6044359283116100e557610584610016933690600401610472565b91610c72565b84358a81116100e55782017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc81360301916101a083126100e5576101608551936105d385610120565b126100e5576105e06103b6565b6105eb8b840161040d565b81526105f96044840161040d565b8a8201526064830135868201526106126084840161040d565b8782015260a4830135608082015261062c60c4840161040d565b60a082015261063d60e4840161040d565b60c082015261064f610104840161040d565b60e0820152610661610124840161041a565b610100820152610674610144840161041a565b610120820152610687610164840161042b565b61014082015283526101848201358c81116100e5576106ab908b3691850101610472565b898401526101a4820135928c84116100e5576106cf8a94938c869536920101610472565b86820152815201940193610549565b346100e55760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e557600435610719816103ef565b6001549073ffffffffffffffffffffffffffffffffffffffff3381841603610768577fffffffffffffffffffffffff000000000000000000000000000000000000000091169116176001555f80f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f6e6c79206d616e616765722063616e2063616c6c20746869732066756e637460448201527f696f6e00000000000000000000000000000000000000000000000000000000006064820152fd5b346100e55760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e5576108266004356103ef565b6108316024356103ef565b60643567ffffffffffffffff81116100e557610016903690600401610472565b1561085857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f5072696e636970616c4d617463683a204f6e6c7920636c656172696e6720636160448201527f6e2063616c6c20746869732066756e6374696f6e0000000000000000000000006064820152fd5b156108e357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5072696e636970616c4d617463683a20496e76616c6964207369676e6174757260448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b805182101561097b5760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9061020b9160208152610ae282516109d960208401825173ffffffffffffffffffffffffffffffffffffffff169052565b602081015173ffffffffffffffffffffffffffffffffffffffff16604084015260408101516060840152610a2a6060820151608085019073ffffffffffffffffffffffffffffffffffffffff169052565b608081015160a0840152610a5b60a082015160c085019073ffffffffffffffffffffffffffffffffffffffff169052565b60c081015173ffffffffffffffffffffffffffffffffffffffff1660e084015260e0810151610aa5610100918286019073ffffffffffffffffffffffffffffffffffffffff169052565b810151610abd610120918286019063ffffffff169052565b81015190610ad6610140928386019063ffffffff169052565b01511515610160830152565b6020820151906040610b036101a093846101808501526101c08401906101b7565b930151917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828503019101526101b7565b6040513d5f823e3d90fd5b9060209081838203126100e557825167ffffffffffffffff938482116100e557019080601f830112156100e5578151610b77816103d7565b94604092610b8784519788610155565b828752858088019360051b860101948186116100e557868101935b868510610bb457505050505050505090565b84518481116100e5578201606090817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082870301126100e557875191610bf983610120565b8a820151610c06816103ef565b8352888201518b840152810151908682116100e557019184603f840112156100e5578983015191610c3683610438565b610c428a519182610155565b838152868a85870101116100e557610c638c959486958c8785019101610196565b89820152815201940193610ba2565b90610ce9929173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691610cbb833314610851565b610cee6001958695610ce1875473ffffffffffffffffffffffffffffffffffffffff1690565b908486610eb3565b6108dc565b5f845b610e26575b50835f815b610dd0575b5050805180610daf575b50505f925b610d1a575b50505050565b8051831015610daa57610d2d8382610967565b5192823b156100e5575f610d6e94604051809681927fb1e53821000000000000000000000000000000000000000000000000000000008352600483016109a8565b038183875af1908115610da55785948592610d8c575b500192610d0f565b80610d99610d9f92610141565b806100e9565b5f610d84565b610b34565b610d14565b81602080610dc493610dc99501019101610b3f565b6111e1565b5f80610d0a565b8351811015610e21578190602080610de88388610967565b51015151610df9575b500181610cfb565b610dc481610e1b92610e0b858a610967565b5101518051810182019101610b3f565b5f610df1565b610d00565b938251851015610ead5750610e3b8483610967565b51833b156100e5575f610e7b91604051809381927f4b388178000000000000000000000000000000000000000000000000000000008352600483016109a8565b038183885af18015610da557869586928392610e9a575b500190610cf1565b80610d99610ea792610141565b5f610e92565b93610cf6565b93909291936020808601519160409384880151936060809901515f1a96601b8810611173575b835197610efd610ee88a6103d7565b99610ef58a519b8c610155565b808b526103d7565b967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080980136888c01375f5b865181101561109d57808b6110968f936001948e61108d8f8f8f81610f518861108193610967565b519687519061106d836110618a610f7c865173ffffffffffffffffffffffffffffffffffffffff1690565b95610f9d8482015173ffffffffffffffffffffffffffffffffffffffff1690565b95610fc2838301519183015173ffffffffffffffffffffffffffffffffffffffff1690565b608083015160a084015173ffffffffffffffffffffffffffffffffffffffff1660c085015173ffffffffffffffffffffffffffffffffffffffff169161101f60e087015173ffffffffffffffffffffffffffffffffffffffff1690565b9361103261010088015163ffffffff1690565b9561105361014061104b6101208b015163ffffffff1690565b990151151590565b98519c8d9b8c019e8f611496565b03878101835282610155565b51902096015194519485928301968761143f565b03908101835282610155565b51902092610967565b5201610f29565b50909196945061116e95939a5061116292986110d16110dd61020b9c8b519283916110cb8a840180976112b5565b906112e1565b03888101835282610155565b519020885161111d816110d18882019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b5190209751988994850191926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b03908101855284610155565b6112f8565b96601b0160ff81116111855796610ed9565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b3d156111dc573d906111c382610438565b916111d16040519384610155565b82523d5f602084013e565b606090565b8051905f5b8281106111f257505050565b73ffffffffffffffffffffffffffffffffffffffff6112118284610967565b5151166020905f80836112248688610967565b51015160409384611235888a610967565b510151918683519301915af16112496111b2565b50156112595750506001016111e6565b6064925051907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f43616c6c20746f2065787465726e616c2066756e6374696f6e206661696c65646044820152fd5b80516020809201915f5b8281106112cd575050505090565b8351855293810193928101926001016112bf565b906112f460209282815194859201610196565b0190565b611302838361145c565b506004819592951015611412571593846113ef575b508315611325575b50505090565b5f9293509082916040516113a28161137660208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a875260248401526040604484015260648301906101b7565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610155565b51915afa906113af6111b2565b826113e1575b826113c5575b50505f808061131f565b9091506020818051810103126100e55760200151145f806113bb565b9150602082511015916113b5565b73ffffffffffffffffffffffffffffffffffffffff83811691161493505f611317565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60209291815261145782518093858085019101610196565b010190565b815191906041830361148c576114859250602082015190606060408401519301515f1a90611575565b9192909190565b50505f9160029190565b9995926115699760c19c99936112f49b969561153d98605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116115f9579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610da5575f5173ffffffffffffffffffffffffffffffffffffffff8116156115ef57905f905f90565b505f906001905f90565b5050505f916003919056fea264697066735822122008d34c7e316eaf01dbb29c6e132482ca511dac8ba3a127c74605ca5f04bbac8664736f6c63430008180033";

type PrincipalMatchConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrincipalMatchConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrincipalMatch__factory extends ContractFactory {
  constructor(...args: PrincipalMatchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _clearing: AddressLike,
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_clearing, _manager, overrides || {});
  }
  override deploy(
    _clearing: AddressLike,
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_clearing, _manager, overrides || {}) as Promise<
      PrincipalMatch & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrincipalMatch__factory {
    return super.connect(runner) as PrincipalMatch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrincipalMatchInterface {
    return new Interface(_abi) as PrincipalMatchInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrincipalMatch {
    return new Contract(address, _abi, runner) as unknown as PrincipalMatch;
  }
}
