/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancel",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct IClearing.SignedOrder",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "escrow",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct IClearing.SignedOrder",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flash",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IClearing.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getSignatureMessage",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct IClearing.SignedOrder",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "hasSettled",
    inputs: [
      {
        name: "offerer",
        type: "address",
        internalType: "address",
      },
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isCancelled",
    inputs: [
      {
        name: "offerer",
        type: "address",
        internalType: "address",
      },
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "move",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "release",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct IClearing.SignedOrder",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settle",
    inputs: [
      {
        name: "orders",
        type: "tuple[]",
        internalType: "struct IClearing.SignedOrder[]",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "witness",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "verifyOrderSignature",
    inputs: [
      {
        name: "signedOrder",
        type: "tuple",
        internalType: "struct IClearing.SignedOrder",
        components: [
          {
            name: "order",
            type: "tuple",
            internalType: "struct IClearing.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_to",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Cancelled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "zone",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "order",
        type: "tuple",
        indexed: false,
        internalType: "struct IClearing.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deposit",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Settled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "zone",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "offerer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "order",
        type: "tuple",
        indexed: false,
        internalType: "struct IClearing.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdraw",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x61012060405234620000c757306080524660a05260a06200001f620000cb565b602081019063416f726960e01b825262000038620000cb565b91602083019163076322e360e41b8352519020915190208160c0528060e052604051917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260208301526040820152466060820152306080820152206101009081526040516131c2918262000104833960805182505060a05182505060c05182505060e05182505051815050f35b5f80fd5b60408051919082016001600160401b03811183821017620000ef5760405260048252565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c8063112f6a76146101045780631f487333146100ff5780632c25b52b146100fa5780634b388178146100f55780637db7cdd6146100f0578063836337d4146100eb57806384b0196e146100e657806385a1208a146100e1578063aaeaa99a146100dc578063b1e53821146100d7578063d33a5997146100d2578063e1dfd54a146100cd578063e9c670ad146100c8578063f37e8d38146100c35763f7888aec146100be575f80fd5b611833565b6116d6565b61151f565b6112c2565b6112aa565b611062565b610e97565b610de2565b610cab565b610c1b565b610b75565b6107d3565b610605565b61048f565b610384565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6060810190811067ffffffffffffffff82111761015257604052565b610109565b67ffffffffffffffff811161015257604052565b6040810190811067ffffffffffffffff82111761015257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761015257604052565b60405190610160820182811067ffffffffffffffff82111761015257604052565b73ffffffffffffffffffffffffffffffffffffffff81160361020757565b5f80fd5b60043590610218826101e9565b565b60243590610218826101e9565b60643590610218826101e9565b60a43590610218826101e9565b60c43590610218826101e9565b60e43590610218826101e9565b3590610218826101e9565b610104359063ffffffff8216820361020757565b610124359063ffffffff8216820361020757565b359063ffffffff8216820361020757565b8015150361020757565b61014435906102188261029f565b35906102188261029f565b919082610160910312610207576102d76101c8565b916102e18161025b565b83526102ef6020820161025b565b60208401526040810135604084015261030a6060820161025b565b60608401526080810135608084015261032560a0820161025b565b60a084015261033660c0820161025b565b60c084015261034760e0820161025b565b60e084015261010061035a81830161028e565b9084015261012061036c81830161028e565b9084015261037e6101408092016102b7565b90830152565b34610207576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757602061044a6103c16101c8565b6103c961020b565b81526103d361021a565b8382015260443560408201526103e7610227565b606082015260843560808201526103fc610234565b60a0820152610409610241565b60c082015261041661024e565b60e0820152610423610266565b61010082015261043161027a565b61012082015261043f6102a9565b610140820152612ab2565b604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261020757600435610488816101e9565b9060243590565b346102075773ffffffffffffffffffffffffffffffffffffffff6104b236610452565b91165f52600160205260405f20905f52602052602060ff60405f2054166040519015158152f35b67ffffffffffffffff811161015257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156102075780359061052a826104d9565b926105386040519485610187565b8284526020838301011161020757815f926020809301838601378301015290565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602081830112610207576004359167ffffffffffffffff91828411610207576101a090848303011261020757604051926105b384610136565b6105c082826004016102c2565b8452610164810135838111610207578260046105de92840101610513565b6020850152610184810135928311610207576105fd9201600401610513565b604082015290565b346102075761061336610559565b610659610652610639835173ffffffffffffffffffffffffffffffffffffffff90511690565b73ffffffffffffffffffffffffffffffffffffffff1690565b33146118cb565b61066a61066582612bee565b611930565b6106748151612ab2565b6106e56106e06106dc6106d5846106c86106a4885173ffffffffffffffffffffffffffffffffffffffff90511690565b73ffffffffffffffffffffffffffffffffffffffff165f52600260205260405f2090565b905f5260205260405f2090565b5460ff1690565b1590565b6119bb565b61073a61070f826106c86106a4865173ffffffffffffffffffffffffffffffffffffffff90511690565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055565b8151907f21569887b708af6837697669608231446fcd6f338a74705f15701a776811dfd761077f60c084015173ffffffffffffffffffffffffffffffffffffffff1690565b9360206107a0855173ffffffffffffffffffffffffffffffffffffffff1690565b910151906107ce73ffffffffffffffffffffffffffffffffffffffff92836040519485941698169683611a20565b0390a4005b34610207576107e136610559565b6107ef600160035c14611b4e565b805161010001516108109063ffffffff165b63ffffffff4291161115611bb3565b61083b4261083461082b61012085510163ffffffff90511690565b63ffffffff1690565b1015611c3e565b6108b861086060c08351015173ffffffffffffffffffffffffffffffffffffffff1690565b61089373ffffffffffffffffffffffffffffffffffffffff809216338114908115610b3e575b8115610b34575b50611cc9565b825160e0015173ffffffffffffffffffffffffffffffffffffffff165b164614611d2e565b6108c28151612ab2565b61092361091e6106dc836108ec865173ffffffffffffffffffffffffffffffffffffffff90511690565b73ffffffffffffffffffffffffffffffffffffffff165f52600160205260405f20905f5260205260ff60405f20541690565b611d93565b61094460018061093b845f52600460205260405f2090565b5c161415611df8565b604082510151610b23575b6001610975610966835f52600460205260405f2090565b925f52600460205260405f2090565b5c17905d610a016109c261099f835173ffffffffffffffffffffffffffffffffffffffff90511690565b73ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b82516020015173ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b5481519060408201518091115f14610ad15750508051610a6c610a64610a4361099f6040850151945173ffffffffffffffffffffffffffffffffffffffff1690565b84516020015173ffffffffffffffffffffffffffffffffffffffff166109df565b918254611eb0565b90555b610acd610ac5604083510151926109df6020610aa83373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b9251015173ffffffffffffffffffffffffffffffffffffffff1690565b918254611ec2565b9055005b81610b17610afc6106396020610b1e96015173ffffffffffffffffffffffffffffffffffffffff1690565b915173ffffffffffffffffffffffffffffffffffffffff1690565b3091612d07565b610a6f565b610b2f61066583612bee565b61094f565b905030145f61088d565b80159150610886565b9181601f840112156102075782359167ffffffffffffffff8311610207576020838186019501011161020757565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075760043567ffffffffffffffff808211610207573660238301121561020757816004013591818311610207573660248460051b830101116102075760243582811161020757610bf1903690600401610b47565b9060443593841161020757610c1994610c106024953690600401610b47565b9590940161248e565b005b34610207576020610c33610c2e36610559565b612bee565b6040519015158152f35b5f91031261020757565b5f5b838110610c585750505f910152565b8181015183820152602001610c49565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610ca481518092818752878088019101610c47565b0116010190565b34610207575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261020757610d84604051610ce88161016b565b6004815260207f416f72690000000000000000000000000000000000000000000000000000000081830152610d92604051610d228161016b565b600481527f76322e3000000000000000000000000000000000000000000000000000000000838201526040519485947f0f00000000000000000000000000000000000000000000000000000000000000865260e08587015260e0860190610c68565b908482036040860152610c68565b904660608401523060808401525f60a084015282820360c0840152806060519283815201916080915f5b828110610dcb57505050500390f35b835185528695509381019392810192600101610dbc565b346102075773ffffffffffffffffffffffffffffffffffffffff610e0536610452565b91165f52600260205260405f20905f52602052602060ff60405f2054166040519015158152f35b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261020757600435610e63816101e9565b91602435610e70816101e9565b91604435916064359067ffffffffffffffff821161020757610e9491600401610513565b90565b3461020757610ea536610e2c565b90610ef483610ed13373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b54908181111561105a5750925b610f0c8415156127d7565b610f3783610ed13373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b610f42858254611eb0565b9055610f6f83610ed18373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b610f7a858254611ec2565b905573ffffffffffffffffffffffffffffffffffffffff908181169182604051918616917fad83e7acd83464979ce505abf61e770330d71fb25db2fcec82a9a9f50aea30f0339180610fcd898c8361283c565b0390a481331415908161104f575b50610fe257005b803b1561020757611027935f8094604051968795869485937ff58171df0000000000000000000000000000000000000000000000000000000085523360048601612853565b03925af1801561104a5761103757005b80611044610c1992610157565b80610c3d565b612386565b90503b15155f610fdb565b905092610f01565b346102075761107036610559565b61107e600160035c14611b4e565b6110888151612ab2565b8151610100015161109e9063ffffffff16610801565b6110b94261083461082b61012086510163ffffffff90511690565b6111306110de60c08451015173ffffffffffffffffffffffffffffffffffffffff1690565b61110f73ffffffffffffffffffffffffffffffffffffffff809216338114908115610b3e578115610b345750611cc9565b835160e0015173ffffffffffffffffffffffffffffffffffffffff166108b0565b61115a61091e6106dc836108ec865173ffffffffffffffffffffffffffffffffffffffff90511690565b61117b600280611172845f52600460205260405f2090565b5c16141561288f565b604082510151611299575b600261119d610966835f52600460205260405f2090565b5c17905d6080815101516111f5610a646111d43373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b84516060015173ffffffffffffffffffffffffffffffffffffffff166109df565b9055805190611208610140830151151590565b1561126457610c19915051611237610639606083015173ffffffffffffffffffffffffffffffffffffffff1690565b90608061125b60a083015173ffffffffffffffffffffffffffffffffffffffff1690565b91015191612d83565b610ac5610acd916109df6060610aa861099f60a0608089015198015173ffffffffffffffffffffffffffffffffffffffff1690565b6112a561066583612bee565b611186565b3461020757602061044a6112bd36610559565b612df6565b346102075760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610207576004356112fd816101e9565b602435611309816101e9565b6044359160643567ffffffffffffffff81116102075761132d903690600401610513565b6084356113398161029f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152602096919573ffffffffffffffffffffffffffffffffffffffff8082169692949089896024818b5afa98891561104a575f99611500575b5081156114c3576113af85858a612d83565b8316803b1561020757815f916113f79883604051809b819582947fe84afff60000000000000000000000000000000000000000000000000000000084528c8b60048601612929565b03925af195861561104a5789966114b0575b501561147b57509061141d91309086612d07565b60405190815230600482015291829060249082905afa90811561104a57610c19935f9261144e575b5050101561296a565b61146d9250803d10611474575b6114658183610187565b81019061291a565b5f80611445565b503d61145b565b610a6490610ed16114a99373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b905561141d565b806110446114bd92610157565b5f611409565b6114ee83610ed18673ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b6114f9868254611ec2565b90556113af565b6115189199508a3d8c11611474576114658183610187565b975f61139d565b61152836610e2c565b6040517f70a082310000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff9592938587169392602092918382602481895afa91821561104a575f926116b7575b50818111156116af5750905b6115a38215156127d7565b604051818152306004820152918383602481895afa92831561104a575f9361168c575b506115d390303388612d07565b6040519081523060048201528281602481885afa90811561104a57611600935f9261166f575b5050611eb0565b9461162c85610ed18473ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b611637878254611ec2565b9055811691826040517fc78ca74c250a1078ea448c136b74deef29cee05418f17eaee30a117c22483c18339180610fcd898c8361283c565b6116859250803d10611474576114658183610187565b5f806115f9565b6115d39193506116a890853d8711611474576114658183610187565b92906115c6565b905090611598565b6116cf919250843d8611611474576114658183610187565b905f61158c565b34610207576116e436610e2c565b91335f525f6020526117178160405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b5482116117af578061176b7f618bd60ddf6a63dee46da100226c5eff9f6be6133c110c5c0a0c7bf686d0747892610ed13373ffffffffffffffffffffffffffffffffffffffff165f525f60205260405f2090565b611776848254611eb0565b905573ffffffffffffffffffffffffffffffffffffffff8091169461179c848288612d83565b6107ce604051928392169533958361283c565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f416d6f756e7420746f207769746864726177206973206772656174657220746860448201527f616e2074686569722062616c616e6365000000000000000000000000000000006064820152fd5b346102075760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102075760206118c2600435611873816101e9565b73ffffffffffffffffffffffffffffffffffffffff60243591611895836101e9565b165f525f835260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b54604051908152f35b156118d257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4f6e6c79206f6666657265722063616e2063616e63656c0000000000000000006044820152fd5b1561193757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5369676e617475726520646f6573206e6f7420636f72726573706f6e6420746f60448201527f206f726465722064657461696c730000000000000000000000000000000000006064820152fd5b156119c257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f726465722068617320616c7265616479206265656e2063616e63656c6c65646044820152fd5b90610e949291611b4061018092611a4d83825173ffffffffffffffffffffffffffffffffffffffff169052565b60208181015173ffffffffffffffffffffffffffffffffffffffff169084015260408101516040840152611a9e6060820151606085019073ffffffffffffffffffffffffffffffffffffffff169052565b60808101516080840152611acf60a082015160a085019073ffffffffffffffffffffffffffffffffffffffff169052565b60c08181015173ffffffffffffffffffffffffffffffffffffffff169084015260e08181015173ffffffffffffffffffffffffffffffffffffffff16908401526101008181015163ffffffff16908401526101208181015163ffffffff169084015261014090810151151590830152565b816101608201520190610c68565b15611b5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f7420696e20636c656172696e6720706861736500000000000000000000006044820152fd5b15611bba57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f726465722073746172742074696d6520697320696e2074686520667574757260448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b15611c4557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f7264657220656e642074696d652068617320616c726561647920706173736560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152fd5b15611cd057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f72646572207a6f6e6520646f6573206e6f74206d61746368000000000000006044820152fd5b15611d3557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4f7264657220636861696e496420646f6573206e6f74206d61746368000000006044820152fd5b15611d9a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f7264657220686173206265656e20736574746c6564000000000000000000006044820152fd5b15611dff57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4f72646572277320696e70757420617373657473206861766520616c7265616460448201527f79206265656e20657363726f77656400000000000000000000000000000000006064820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b91908203918211611ebd57565b611e83565b91908201809211611ebd57565b9190811015611f0f5760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6181360301821215610207570190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b35610e94816101e9565b15611f4d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f726465727320617265206e6f7420666f72207468652073616d65207a6f6e656044820152fd5b610e949036906102c2565b15611fbd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f7264657220686173206265656e2063616e63656c6c656400000000000000006044820152fd5b1561202257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5a6f6e65206973206e6f742073657400000000000000000000000000000000006044820152fd5b90610218916120ac826120928361025b565b73ffffffffffffffffffffffffffffffffffffffff169052565b6120d86120bb6020830161025b565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b6040810135604083015261210e6120f16060830161025b565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b6080810135608083015261214461212760a0830161025b565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b61217061215360c0830161025b565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b61219c61217f60e0830161025b565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b6121b96101006121ad81840161028e565b63ffffffff1690840152565b6121ca6101206121ad81840161028e565b6121d86101408092016102b7565b1515910152565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561020757016020813591019167ffffffffffffffff821161020757813603831361020757565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b9496959391929083606087016060885252608086019060808560051b8801019481925f5b8281106122c3575050505050916122b591610e94969793868303602088015261222f565b92604081850391015261222f565b90919293967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a820301835287357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe618636030181121561020757600191866123759201906123566101a06123378385612080565b6101609080612348838701876121df565b92909386015284019161222f565b9161236761018091828101906121df565b92909181850391015261222f565b976020908101959493019101612291565b6040513d5f823e3d90fd5b1561239857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4f726465722773206f7574707574206173736574732068617665206e6f74206260448201527f65656e20706169640000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610207570180359067ffffffffffffffff82116102075760200191813603831361020757565b90610e9493916124808161018093612080565b81610160820152019161222f565b93909291600195600160035d5f85885f5b8983821061269957505050612606575b50505050505f5b8181106124c757505050505f60035d565b806124e46124df6124da87948688611ecf565b611fab565b612ab2565b6125046002806124fc845f52600460205260405f2090565b5c1614612391565b61251e6106dc826108ec61251986898b611ecf565b611f3c565b61252a575b50016124b6565b61256661070f826106c8612542612519878a8c611ecf565b73ffffffffffffffffffffffffffffffffffffffff165f52600160205260405f2090565b61257c60c0612576848789611ecf565b01611f3c565b9061258b612519848789611ecf565b907f3fc35899ff3cf87226e044d32f485b1ef6de2cce5635a009226b1659cf9906716125fd6125bb86898b611ecf565b936125d56125ca888b8d611ecf565b61016081019061241c565b73ffffffffffffffffffffffffffffffffffffffff939184604051958695169916978461246d565b0390a45f612523565b73ffffffffffffffffffffffffffffffffffffffff169061262882151561201b565b813b15610207575f8761266e88938397604051998a98899788967f9ab3f3cc0000000000000000000000000000000000000000000000000000000088526004880161226d565b03925af1801561104a57612686575b808080806124af565b8061104461269392610157565b5f61267d565b909192936126ba466126b461063960e0612576888b89611ecf565b14611d2e565b73ffffffffffffffffffffffffffffffffffffffff8181169081612756575050506127486106dc826127156124df6124da876126ff60c0612576838e61274d9c611ecf565b9a5b61270f612519838389611ecf565b95611ecf565b9073ffffffffffffffffffffffffffffffffffffffff165f52600260205260405f20905f5260205260ff60405f20541690565b611fb6565b0188879161249f565b926127156124df6124da878a612748979b6106dc9761274d9a6127846106398a6125768860c0978893611ecf565b151590816127bc575b5061279a575b5050612701565b6127af6106396127b59361257687878d611ecf565b14611f46565b5f80612793565b90506127cd8361257687878d611ecf565b163014155f61278d565b156127de57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f416d6f756e7420746f207472616e7366657220697320300000000000000000006044820152fd5b604090610e94939281528160208201520190610c68565b9092610e94949360809373ffffffffffffffffffffffffffffffffffffffff809216845216602083015260408201528160608201520190610c68565b1561289657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f726465722773206f757470757420617373657473206861766520616c72656160448201527f6479206265656e207061696400000000000000000000000000000000000000006064820152fd5b90816020910312610207575190565b9260609273ffffffffffffffffffffffffffffffffffffffff612962939796971685526020850152608060408501526080840190610c68565b931515910152565b1561297157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c617368206c6f616e206e6f742072657061696400000000000000000000006044820152fd5b999592612aa29760c19c9993612aae9b9695612a7698605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff1690612be8612aef602083015173ffffffffffffffffffffffffffffffffffffffff1690565b612bbc604084015193612b19606082015173ffffffffffffffffffffffffffffffffffffffff1690565b906080810151612b4060a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff1691612b8961010086015163ffffffff1690565b93612baa610140612ba261012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f6129cf565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610187565b51902090565b60408101516020810151606060408301519201515f1a90601b8210612cf3575b92612cee610e9494612cc273ffffffffffffffffffffffffffffffffffffffff612c3785612df6565b945151169360405160208101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152612c7981610136565b519020946040519687936020850191926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101855284610187565b612e38565b90601b019260ff8411611ebd579290612c0e565b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176101525761021892604052612f53565b9173ffffffffffffffffffffffffffffffffffffffff604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff8411176101525761021892604052612f53565b6020612e028251612ab2565b910151612be860408051809360208201958652612e288151809260208686019101610c47565b8101036020810184520182610187565b612e428383612ff4565b506004819592951015612f2657159384612f03575b508315612e65575b50505090565b5f929350908291604051612eb681612bbc60208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a87526024840152604060448401526064830190610c68565b51915afa90612ec361302e565b82612ef5575b82612ed9575b50505f8080612e5f565b9091506020818051810103126102075760200151145f80612ecf565b915060208251101591612ec9565b73ffffffffffffffffffffffffffffffffffffffff83811691161493505f612e57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f8073ffffffffffffffffffffffffffffffffffffffff612f8993169360208151910182865af1612f8261302e565b90836130ec565b8051908115159182612fd0575b5050612f9f5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b81925090602091810103126102075760200151612fec8161029f565b155f80612f96565b81519190604183036130245761301d9250602082015190606060408401519301515f1a9061305d565b9192909190565b50505f9160029190565b3d15613058573d9061303f826104d9565b9161304d6040519384610187565b82523d5f602084013e565b606090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116130e1579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561104a575f5173ffffffffffffffffffffffffffffffffffffffff8116156130d757905f905f90565b505f906001905f90565b5050505f9160039190565b9061312b575080511561310157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613183575b61313c575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561313456fea2646970667358221220e703f1a63696b8cd6b106fe19b5c2551e05d084001d114a1f6956d5f4266f5f964736f6c63430008180033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
