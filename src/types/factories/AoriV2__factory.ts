/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_serverSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getMatchingHash",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "matchingHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IAoriV2.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasOrderSettled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "settled",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "settleOrders",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "serverSignature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "signatureIntoComponents",
    inputs: [
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "FeeReceived",
    inputs: [
      {
        name: "feeRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeTag",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OrdersSettled",
    inputs: [
      {
        name: "makerHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "takerHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "maker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "taker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "zone",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
      {
        name: "matchingHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a03461006c57601f62002f4c38819003918201601f19168301916001600160401b038311848410176100715780849260209460405283398101031261006c57516001600160a01b038116810361006c57608052604051612ec4908162000088823960805181610c3f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063112f6a76146100c75780637a54ff25146100be5780638340f549146100b557806384d7a7f1146100ac578063b4ec369f146100a3578063e61be4da1461009a578063f3fef3a314610091578063f7888aec146100885763ff628b461461008057600080fd5b61000e611700565b5061000e611662565b5061000e6115ad565b5061000e611553565b5061000e6114e3565b5061000e610571565b5061000e610474565b5061000e610413565b3461000e576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061010a61010536610296565b612841565b604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161015657604052565b61015e610112565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761015657604052565b60405190610160820182811067ffffffffffffffff82111761015657604052565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b600435906101f0826101c5565b565b602435906101f0826101c5565b606435906101f0826101c5565b60a435906101f0826101c5565b60c435906101f0826101c5565b60e435906101f0826101c5565b35906101f0826101c5565b63ffffffff81160361000e57565b61010435906101f08261023e565b61012435906101f08261023e565b35906101f08261023e565b8015150361000e57565b61014435906101f082610273565b35906101f082610273565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc61016091011261000e576102c96101a4565b906102d26101e3565b82526102dc6101f2565b602083015260443560408301526102f16101ff565b6060830152608435608083015261030661020c565b60a0830152610313610219565b60c0830152610320610226565b60e083015261032d61024c565b61010083015261033b61025a565b61012083015261034961027d565b610140830152565b91908261016091031261000e576103666101a4565b9161037081610233565b835261037e60208201610233565b60208401526040810135604084015261039960608201610233565b6060840152608081013560808401526103b460a08201610233565b60a08401526103c560c08201610233565b60c08401526103d660e08201610233565b60e08401526101006103e9818301610268565b908401526101206103fb818301610268565b9084015261040d61014080920161028b565b90830152565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061046a60043560ff6001918060081c6000526000602052161b60406000205416151590565b6040519015158152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356104b0816101c5565b61051a6024356104bf816101c5565b6044359273ffffffffffffffffffffffffffffffffffffffff906104e7853033858716612aa4565b16600052600160205260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b80549182018092116105295755005b61053161224d565b55005b908161034091031261000e5790565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576105bd903690600401610534565b9060243581811161000e576105d6903690600401610543565b92909160443590811161000e576105f1903690600401610543565b919061060061010083016118ec565b429063ffffffff161115610613906118f6565b4261062161026084016118ec565b63ffffffff16111561063290611981565b4261064061012084016118ec565b63ffffffff16101561065190611a0c565b4261065f61028084016118ec565b63ffffffff16101561067090611a97565b61067c60e08301611b22565b6106896102408401611b22565b73ffffffffffffffffffffffffffffffffffffffff166106bf9173ffffffffffffffffffffffffffffffffffffffff1614611b2c565b6106cb60e08301611b22565b6106ec9073ffffffffffffffffffffffffffffffffffffffff164614611bb7565b6106f860c08301611b22565b6107056102208401611b22565b73ffffffffffffffffffffffffffffffffffffffff1661073b9173ffffffffffffffffffffffffffffffffffffffff1614611c42565b61074760c08301611b22565b6107689073ffffffffffffffffffffffffffffffffffffffff163014611ccd565b6107723683610351565b61077b90612841565b9361078a366101608501610351565b61079390612841565b956107a26102c0850185611d58565b36906107ad9261148e565b6107b690612726565b91906107c187611b22565b926040516020810190806107ff8d84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101825261082f9082610163565b51902091604051938492602084019261087d9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183526108ad9083610163565b6108b692612c84565b6108bf90611da9565b6108cd6102e0850185611d58565b36906108d89261148e565b6108e190612726565b91906108f06101608801611b22565b928a60405180602081019261092f9084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101825261095f9082610163565b5190209160405193849260208401926109ad9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183526109dd9083610163565b6109e692612c84565b6109ef90611e34565b6109fb60208501611b22565b610a086101c08601611b22565b73ffffffffffffffffffffffffffffffffffffffff16610a3e9173ffffffffffffffffffffffffffffffffffffffff1614611ebf565b610a4a60608501611b22565b610a576101808601611b22565b73ffffffffffffffffffffffffffffffffffffffff16610a8d9173ffffffffffffffffffffffffffffffffffffffff1614611f4a565b610aa260408501356101e08601351115611fd5565b610ab76101a085013560808601351115612060565b610ada8660ff6001918060081c6000526000602052161b60406000205416151590565b15610ae4906120eb565b610b078760ff6001918060081c6000526000602052161b60406000205416151590565b15610b1190612150565b3690610b1c9261148e565b610b2590612726565b610b318593929361297d565b604051806020810192610b6e9084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610b9e9082610163565b51902090604051938493610bcc93859094939260ff6060936080840197845216602083015260408201520152565b6000805203905a916000916001602094fa15927fe88cb0855166f459f1e0289cd647a1cccffd3ad7095d86997a9a32014d571e2f93611438575b610c65610c2860005173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146121c2565b610c88858060081c6000526000602052600160ff604060002092161b8154179055565b610cab868060081c6000526000602052600160ff604060002092161b8154179055565b610ce1610cbb6101608501611b22565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b610d1c6101a085013591610cf86101808701611b22565b73ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541061140a57610d42610d35610cbb6101608601611b22565b610cf86101808601611b22565b610d526101a0850135825461227d565b90555b610d69610d656101408501612292565b1590565b156113e157610d8c610d80610cbb60a08601611b22565b610cf860608601611b22565b610d9b6080850135825461229c565b90555b610da783611b22565b3b15158061132e575b611294575b610dc1610cbb84611b22565b610dd6604085013591610cf860208701611b22565b541061126657610df7610deb610cbb85611b22565b610cf860208601611b22565b610e066040850135825461227d565b90555b610e19610d656102a08501612292565b1561123457610e3e610e31610cbb6102008601611b22565b610cf86101c08601611b22565b610e4e6101e0850135825461229c565b90555b6101e08301356040840135116111f7575b60808301356101a0840135116111b3575b73ffffffffffffffffffffffffffffffffffffffff610e956103208501611b22565b7ff0cc2afd53c1c049bed798781c8b04fa99891b75feb5cebfdd8289d6c9ee438d610ec4610300870187611d58565b939092610f53610ed660208a01611b22565b94610eea6101e08b013560408c013561227d565b96610f14610efa60608d01611b22565b91610f0e60808e01356101a08f013561227d565b93612602565b9760405195869516978590606092959493608083019673ffffffffffffffffffffffffffffffffffffffff809316845260208401521660408201520152565b0390a3610f5f83611b22565b3b151580611100575b611038575b5050610f7881611b22565b90611033610f896101608301611b22565b91610f9660208201611b22565b93610fa360608301611b22565b91610fb060c08201611b22565b90610fbd60e08201611b22565b92610fc78261297d565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815298831660208a0152988216888a0152948116606088015296810135608080880191909152013560a0860152851660c085015290931660e0830152610100820192909252908190610120820190565b0390a3005b60206110a3916110bd9361106a61105161105188611b22565b73ffffffffffffffffffffffffffffffffffffffff1690565b9060006040518096819582947f72a222570000000000000000000000000000000000000000000000000000000084528b600485016124ac565b03925af19081156110f3575b6000916110c4575b50612617565b3880610f6d565b6110e6915060203d6020116110ec575b6110de8183610163565b8101906122a9565b386110b7565b503d6110d4565b6110fb6121b5565b6110af565b5061111061105161105185611b22565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061116d60048201907f72a2225700000000000000000000000000000000000000000000000000000000602083019252565b03915afa9081156111a6575b600091611187575b50610f68565b6111a0915060203d6020116110ec576110de8183610163565b38611181565b6111ae6121b5565b611179565b6111c660808401356101a085013561227d565b6111f06111e86111dc610cbb6103208801611b22565b610cf860608801611b22565b91825461229c565b9055610e73565b61120a6101e0840135604085013561227d565b61122d6111e8611220610cbb6103208801611b22565b610cf86101c08801611b22565b9055610e62565b6112616112476110516101c08601611b22565b6101e08501359061125b6102008701611b22565b90612a25565b610e51565b61128f61127861105160208601611b22565b604085013590309061128987611b22565b90612aa4565b610e09565b6112fd6112a661105161105186611b22565b602060405180927f1eca0a59000000000000000000000000000000000000000000000000000000008252816000816112e3898b8d600485016124ac565b03925af1908115611321575b600091611302575b5061259d565b610db5565b61131b915060203d6020116110ec576110de8183610163565b386112f7565b6113296121b5565b6112ef565b5061133e61105161105185611b22565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061139b60048201907f1eca0a5900000000000000000000000000000000000000000000000000000000602083019252565b03915afa9081156113d4575b6000916113b5575b50610db0565b6113ce915060203d6020116110ec576110de8183610163565b386113af565b6113dc6121b5565b6113a7565b6114056113f361105160608601611b22565b60808501359061125b60a08701611b22565b610d9e565b61143361141d6110516101808601611b22565b6101a08501359030906112896101608801611b22565b610d55565b6114406121b5565b610c06565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111611481575b01160190565b611489610112565b61147b565b92919261149a82611445565b916114a86040519384610163565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e578160206114e09335910161148e565b90565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761153d61153860609236906004016114c5565b612726565b9060ff6040519316835260208301526040820152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761010a6115a86020923690600401610534565b61297d565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576116536004356115ec816101c5565b602435903360005260016020526116278160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b805490838203918211611655575b5573ffffffffffffffffffffffffffffffffffffffff339116612a25565b005b61165d61224d565b611635565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206116f76004356116a3816101c5565b73ffffffffffffffffffffffffffffffffffffffff602435916116c5836101c5565b166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561173c816101c5565b602435611748816101c5565b6044359060643567ffffffffffffffff811161000e5761176c9036906004016114c5565b60843561177881610273565b80156118ac5761179f848673ffffffffffffffffffffffffffffffffffffffff8616612a25565b73ffffffffffffffffffffffffffffffffffffffff91828616803b1561000e57826000916117ff93836040518096819582947fe84afff60000000000000000000000000000000000000000000000000000000084528d8d600486016126e5565b03925af1801561189f575b611886575b5015611822579261165393309216612aa4565b5061187a90611855611882939473ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b91825461227d565b9055005b8061189361189992610142565b8061267c565b3861180f565b6118a76121b5565b61180a565b6118da836118558773ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b6118e585825461229c565b905561179f565b356114e08161023e565b156118fd57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b1561198857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611a1357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b15611a9e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b356114e0816101c5565b15611b3357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d616b6572206f72646572277320636861696e696420646f6573206e6f74206d60448201527f617463682074616b6572206f72646572277320636861696e69640000000000006064820152fd5b15611bbe57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f72646572277320636861696e696420646f6573206e6f74206d61746368206360448201527f757272656e7420636861696e69640000000000000000000000000000000000006064820152fd5b15611c4957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572206f726465722773207a6f6e6520646f6573206e6f74206d61746360448201527f682074616b6572206f726465722773207a6f6e650000000000000000000000006064820152fd5b15611cd457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6f6e6520646f6573206e6f74206d61746368207468697320636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561000e570180359067ffffffffffffffff821161000e5760200191813603831361000e57565b15611db057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b15611e3b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f54616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b15611ec657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f7264657220696e70757420746f6b656e206973206e6f74206560448201527f7175616c20746f2074616b6572206f72646572206f757470757420746f6b656e6064820152fd5b15611f5157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f72646572206f757470757420746f6b656e206973206e6f742060448201527f657175616c20746f2074616b6572206f7264657220696e70757420746f6b656e6064820152fd5b15611fdc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f54616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e206d616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b1561206757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e2074616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b156120f257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b1561215757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f54616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b506040513d6000823e3d90fd5b156121c957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f536572766572207369676e617475726520646f6573206e6f7420636f7272657360448201527f706f6e6420746f206f726465722064657461696c7300000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190820391821161228a57565b6101f061224d565b356114e081610273565b9190820180921161228a57565b9081602091031261000e57516114e081610273565b906101f0916122ea826122d083610233565b73ffffffffffffffffffffffffffffffffffffffff169052565b6123166122f960208301610233565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b6040810135604083015261234c61232f60608301610233565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b6080810135608083015261238261236560a08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b6123ae61239160c08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b6123da6123bd60e08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b6123f76101006123eb818401610268565b63ffffffff1690840152565b6124086101206123eb818401610268565b61241661014080920161028b565b1515910152565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561000e57016020813591019167ffffffffffffffff821161000e57813603831361000e57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b916114e0939192604081526124c460408201856122be565b6124d66101a0820161016086016122be565b73ffffffffffffffffffffffffffffffffffffffff61257d6124fc6102c087018761241d565b612518610340939261030092858489015261038088019161246d565b9261256461256d61252d6102e08c018c61241d565b9290967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09361032098858c8403018a8d015261246d565b938b018b61241d565b929091888503019088015261246d565b950135612589816101c5565b16610360820152602081850391015261246d565b156125a457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4265666f7265416f7269547261646520686f6f6b206661696c656400000000006044820152fd5b81604051928392833781016000815203902090565b1561261e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4166746572416f7269547261646520686f6f6b206661696c65640000000000006044820152fd5b600091031261000e57565b919082519283825260005b8481106126d15750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201612692565b9260609273ffffffffffffffffffffffffffffffffffffffff61271e939796971685526020850152608060408501526080840190612687565b931515910152565b6020810151906060604082015191015160001a92601b841061274457565b92601b0160ff81116127535792565b61275b61224d565b92565b9995926128319760c19c999361283d9b969561280598605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff169061297761287e602083015173ffffffffffffffffffffffffffffffffffffffff1690565b61294b6040840151936128a8606082015173ffffffffffffffffffffffffffffffffffffffff1690565b9060808101516128cf60a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff169161291861010086015163ffffffff1690565b9361293961014061293161012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f61275e565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610163565b51902090565b61032061297760346129936102c0850185611d58565b90947fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006129c46102e0830183611d58565b969092876129d6610300830183611d58565b93849291930135956129e7876101c5565b6040519a888c9960208b019e8f378901916020830160008152370191602083016000815237019160601b166020820152036014810184520182610163565b6101f09273ffffffffffffffffffffffffffffffffffffffff604051937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526080820182811067ffffffffffffffff821117612a97575b604052612b1b565b612a9f610112565b612a8f565b90926101f093604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff821117612a97576040525b60008073ffffffffffffffffffffffffffffffffffffffff612b5293169360208151910182865af1612b4b612bb4565b9083612be4565b8051908115159182612b99575b5050612b685750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b612bac92506020809183010191016122a9565b153880612b5f565b3d15612bdf573d90612bc582611445565b91612bd36040519384610163565b82523d6000602084013e565b606090565b90612c235750805115612bf957805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580612c7b575b612c34575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15612c2c565b612c8e8383612da2565b506004819592951015612d7357159384612d50575b508315612cb1575b50505090565b6000929350908291604051612d038161294b60208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a87526024840152604060448401526064830190612687565b51915afa90612d10612bb4565b82612d42575b82612d26575b5050388080612cab565b90915060208180518101031261000e5760200151143880612d1c565b915060208251101591612d16565b73ffffffffffffffffffffffffffffffffffffffff838116911614935038612ca3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8151919060418303612dd357612dcc92506020820151906060604084015193015160001a90612dde565b9192909190565b505060009160029190565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311612e825791612e349160209360405195869094939260ff6060936080840197845216602083015260408201520152565b826000938492838052039060015afa15612e75575b805173ffffffffffffffffffffffffffffffffffffffff811615612e6c57918190565b50809160019190565b612e7d6121b5565b612e49565b5060009360039350905056fea26469706673582212204422e519550d57a8a81687bfaea965287e82783be6031af88c3383068b38965664736f6c63430008110033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_serverSigner, overrides || {});
  }
  override deploy(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_serverSigner, overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
