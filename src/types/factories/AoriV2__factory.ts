/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_serverSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getMatchingHash",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "matchingHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IAoriV2.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTakerFee",
    inputs: [],
    outputs: [
      {
        name: "feeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasOrderSettled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "settled",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "serverSigner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setTakerFee",
    inputs: [
      {
        name: "_newFeeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newFeeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settleOrders",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "serverSignature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "signatureIntoComponents",
    inputs: [
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "withFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withoutFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "FeeReceived",
    inputs: [
      {
        name: "feeRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeTag",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OrdersSettled",
    inputs: [
      {
        name: "makerOrderHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "takerOrderHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "matchingHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "tradeId",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "maker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "taker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "zone",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a034620000cf57601f6200363738819003918201601f19168301916001600160401b03831184841017620000d457808492602094604052833981010312620000cf57516001600160a01b038116808203620000cf57156200007e5760805260405161354c9081620000eb82396080518181816104e00152610f950152f35b60405162461bcd60e51b8152602060048201526024808201527f536572766572207369676e65722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063112f6a761461012b5780631749c0161461012257806331af1908146101195780633394177b146101105780637a54ff25146101075780638340f549146100fe57806388661f9a146100f5578063b4ec369f146100ec578063d23cc5af146100e3578063e3e3f281146100da578063efb1d54c146100d1578063f3fef3a3146100c8578063f7888aec146100bf5763ff628b46146100b757600080fd5b61000e611b71565b5061000e611ad3565b5061000e6118ee565b5061000e610b7d565b5061000e610a9f565b5061000e6108e5565b5061000e610875565b5061000e61077d565b5061000e6105ba565b5061000e610563565b5061000e610504565b5061000e610494565b5061000e610449565b5061000e61037a565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161017857604052565b610180610134565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761017857604052565b60405190610160820182811067ffffffffffffffff82111761017857604052565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b60043590610212826101e7565b565b60243590610212826101e7565b60643590610212826101e7565b60a43590610212826101e7565b60c43590610212826101e7565b60e43590610212826101e7565b3590610212826101e7565b63ffffffff81160361000e57565b610104359061021282610260565b610124359061021282610260565b359061021282610260565b8015150361000e57565b610144359061021282610295565b359061021282610295565b91908261016091031261000e576102cd6101c6565b916102d781610255565b83526102e560208201610255565b60208401526040810135604084015261030060608201610255565b60608401526080810135608084015261031b60a08201610255565b60a084015261032c60c08201610255565b60c084015261033d60e08201610255565b60e084015261010061035081830161028a565b9084015261012061036281830161028a565b908401526103746101408092016102ad565b90830152565b503461000e576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206104416103b86101c6565b6103c0610205565b81526103ca610214565b8382015260443560408201526103de610221565b606082015260843560808201526103f361022e565b60a082015261040061023b565b60c082015261040d610248565b60e082015261041a61026e565b61010082015261042861027c565b61012082015261043661029f565b610140820152612ec7565b604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020610441602435600435612d70565b600091031261000e57565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576002546003546040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915290f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020600160ff6004358060081c60005260008452161b604060002054161515604051908152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356105f6816101e7565b6107026106fa602435610608816101e7565b6040517f70a08231000000000000000000000000000000000000000000000000000000008082523060048301526106d5916106ae9160209073ffffffffffffffffffffffffffffffffffffffff8616908284602481855afa938415610761575b600094610740575b50829061068160443530338661312b565b60405190815230600482015291829060249082905afa918215610733575b600092610706575b505061277c565b9473ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b91825461279b565b9055005b6107259250803d1061072c575b61071d8183610185565b810190612bf8565b38806106a7565b503d610713565b61073b6127bd565b61069f565b8391945061075a90823d841161072c5761071d8183610185565b9390610670565b6107696127bd565b610668565b908161036091031261000e5790565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576104416107d2602092369060040161076e565b613003565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610813575b01160190565b61081b610134565b61080d565b92919261082c826107d7565b9161083a6040519384610185565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e5781602061087293359101610820565b90565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576108cf6108ca6060923690600401610857565b612dac565b9060ff6040519316835260208301526040820152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435610921816101e7565b60243573ffffffffffffffffffffffffffffffffffffffff821615610a1c576064811015610998576109916109969273ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b600355565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f46656520696e20626970732063616e6e6f74206265206772656174657220746860448201527f616e2031250000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f46656520726563697069656e742063616e6e6f74206265207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761271060043581810290801590820483141715610b42575b6024358201809211610b35575b8115610b065760209160405191048152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610b3d61274c565b610af4565b610b4a61274c565b610ae7565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610bc990369060040161076e565b9060243581811161000e57610be2903690600401610b4f565b9160443590811161000e57610bfb903690600401610b4f565b610c1a610c0b6101208701611df8565b63ffffffff4291161115611e02565b610c3e42610c37610c2e6102808901611df8565b63ffffffff1690565b1115611e8d565b610c5942610c52610c2e6101408901611df8565b1015611f18565b610c7442610c6d610c2e6102a08901611df8565b1015611fa3565b610cca610c84610100870161202e565b73ffffffffffffffffffffffffffffffffffffffff610cc2610ca96102608a0161202e565b73ffffffffffffffffffffffffffffffffffffffff1690565b911614612038565b610cf7610cda610100870161202e565b73ffffffffffffffffffffffffffffffffffffffff1646146120c3565b610d33610d0660e0870161202e565b73ffffffffffffffffffffffffffffffffffffffff610d2b610ca96102408a0161202e565b91161461214e565b610d5f610d4260e0870161202e565b73ffffffffffffffffffffffffffffffffffffffff1630146121d9565b610fbe610fb9610f93610ec06108ca610d83610d7e3660208d016102b8565b612ec7565b97610d95610d7e366101808e016102b8565b998b8a60608201356118be575b508b6101c08201356117b5575b508073ffffffffffffffffffffffffffffffffffffffff610de5610ca96101e0610dde6040610ded970161202e565b940161202e565b9116146123cb565b610e238c73ffffffffffffffffffffffffffffffffffffffff610e1b610ca96101a0610dde6080860161202e565b911614612456565b610e3860608d01356102008e013511156124e1565b610e598c610e5260035460a06101c0840135930135612d70565b111561256c565b610e8b610e86610e828c60ff6001918060081c6000526000602052161b60406000205416151590565b1590565b6125f7565b610eb9610eb4610e828d60ff6001918060081c6000526000602052161b60406000205416151590565b61265c565b3691610820565b9290610ecb8b613003565b90610f876040519283610f0c602082019283603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b0393610f3e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282610185565b519020946040519687936020850191926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b03908101845283610185565b7f000000000000000000000000000000000000000000000000000000000000000061331d565b6126c1565b610fe1838060081c6000526000602052600160ff604060002092161b8154179055565b611004848060081c6000526000602052600160ff604060002092161b8154179055565b61103a611014610180870161202e565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b6110756101c0870135916110516101a0890161202e565b73ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54106117875761109b61108e611014610180880161202e565b6110516101a0880161202e565b6110ab6101c0870135825461277c565b90555b6110be610e826101608701612791565b1561175e576110e16110d561101460c0880161202e565b6110516080880161202e565b6110f060a0870135825461279b565b90555b6110ff6020860161202e565b3b1515806116a8575b611609575b61111c6110146020870161202e565b6111316060870135916110516040890161202e565b54106115d8576111556111496110146020880161202e565b6110516040880161202e565b6111646060870135825461277c565b90555b611177610e826102c08701612791565b156115a65761119c61118f611014610220880161202e565b6110516101e0880161202e565b6111ac610200870135825461279b565b90555b6003548061155d575b50610200850135606086013511611520575b6003546111db8160a0880135612d70565b6101c0870135116114da575b5073ffffffffffffffffffffffffffffffffffffffff61120a610340870161202e565b7ff0cc2afd53c1c049bed798781c8b04fa99891b75feb5cebfdd8289d6c9ee438d611239610320890189612264565b9390926112d461124b60408c0161202e565b948b611295611263610200830135606084013561277c565b9861128f6112736080850161202e565b936101c061128760035460a0840135612d70565b91013561277c565b93612b30565b9760405195869516978590606092959493608083019673ffffffffffffffffffffffffffffffffffffffff809316845260208401521660408201520152565b0390a36112e36020860161202e565b3b151580611424575b611373575b50507fc994b196b5024c08f99275a61721d5fd6c3cc0166c6e67f1bf81e4f69629ed8361136e61132085613003565b9461132b8180612264565b92909161133a6020820161202e565b90611348610180820161202e565b61136161010061135a60e0850161202e565b930161202e565b9260405196879687612baa565b0390a4005b60206113c7916113e19361138e610ca9610ca9858b0161202e565b9060006040518096819582947f27b9a6e60000000000000000000000000000000000000000000000000000000084528d600485016129b8565b03925af1908115611417575b6000916113e8575b50612b45565b38806112f1565b61140a915060203d602011611410575b6114028183610185565b8101906127a8565b386113db565b503d6113f8565b61141f6127bd565b6113d3565b50611437610ca9610ca96020880161202e565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061149460048201907f27b9a6e600000000000000000000000000000000000000000000000000000000602083019252565b03915afa9081156114cd575b6000916114ae575b506112ec565b6114c7915060203d602011611410576114028183610185565b386114a8565b6114d56127bd565b6114a0565b6114eb6114f69160a0880135612d70565b6101c087013561277c565b6115186106fa61150c6110146103408a0161202e565b61105160808a0161202e565b9055386111e7565b611533610200860135606087013561277c565b6115566106fa6115496110146103408a0161202e565b6110516101e08a0161202e565b90556111ca565b6115769060a0870135906115719082612d70565b61277c565b61159e6106fa61150c61101460025473ffffffffffffffffffffffffffffffffffffffff1690565b9055386111b8565b6115d36115b9610ca96101e0880161202e565b610200870135906115cd610220890161202e565b906130c4565b6111af565b6116046115ea610ca96040880161202e565b60608701359030906115fe60208a0161202e565b9061312b565b611167565b61167761165d602083611623610ca9610ca9848c0161202e565b8660008b604051968795869485937f3d4a6079000000000000000000000000000000000000000000000000000000008552600485016129b8565b03925af190811561169b575b60009161167c575b50612acb565b61110d565b611695915060203d602011611410576114028183610185565b38611671565b6116a36127bd565b611669565b506116bb610ca9610ca96020880161202e565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061171860048201907f3d4a607900000000000000000000000000000000000000000000000000000000602083019252565b03915afa908115611751575b600091611732575b50611108565b61174b915060203d602011611410576114028183610185565b3861172c565b6117596127bd565b611724565b611782611770610ca96080880161202e565b60a0870135906115cd60c0890161202e565b6110f3565b6117b061179a610ca96101a0880161202e565b6101c08701359030906115fe6101808a0161202e565b6110ae565b6117e5610180836118ad6118b2946117da6108ca610eb96103006118b79a0186612264565b96919590940161202e565b926118a16040519283611826602082019283603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03936118587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282610185565b519020956040519788936020850191926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b03908101855284610185565b61331d565b612340565b8b8b610daf565b6117e56020836118ad6118e2946117da6108ca610eb96102e06118e79a0186612264565b6122b5565b8b8a610da2565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561192a816101e7565b61194161193c610e8260045460ff1690565b612c07565b61197160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152611a4c91611a4491611a199160209173ffffffffffffffffffffffffffffffffffffffff87169083908184602481865afa938415611ac6575b600094611aa7575b506119ed60243533856130c4565b60405190815230600482015291829060249082905afa928315611a9a575b600093611a7b57505061277c565b926106d53373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b91825461277c565b90556109967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060045416600455565b611a92929350803d1061072c5761071d8183610185565b9038806106a7565b611aa26127bd565b611a0b565b611abf919450823d841161072c5761071d8183610185565b92386119df565b611ace6127bd565b6119d7565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611b68600435611b14816101e7565b73ffffffffffffffffffffffffffffffffffffffff60243591611b36836101e7565b166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611bad816101e7565b60243590611bba826101e7565b6044359160643567ffffffffffffffff811161000e57611bde903690600401610857565b92608435611beb81610295565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152909460209473ffffffffffffffffffffffffffffffffffffffff8082169592919087896024818a5afa988915611deb575b600099611dcc575b508515611d8c57611c638484896130c4565b821694853b1561000e57611cb16000828a986109969d836040518096819582947fe84afff60000000000000000000000000000000000000000000000000000000084528d8c60048601612cca565b03925af18015611d7f575b611d66575b5015611d2e575090611cd59130908661312b565b60405190815230600482015291829060249082905afa918215611d21575b600092611d04575b50501015612d0b565b611d1a9250803d1061072c5761071d8183610185565b3880611cfb565b611d296127bd565b611cf3565b611a44906106d5611d5f9373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9055611cd5565b80611d73611d7992610164565b80610489565b38611cc1565b611d876127bd565b611cbc565b611dba826106d58573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b611dc585825461279b565b9055611c63565b611de4919950883d8a1161072c5761071d8183610185565b9738611c51565b611df36127bd565b611c49565b3561087281610260565b15611e0957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611e9457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611f1f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b15611faa57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b35610872816101e7565b1561203f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d616b6572206f72646572277320636861696e696420646f6573206e6f74206d60448201527f617463682074616b6572206f72646572277320636861696e69640000000000006064820152fd5b156120ca57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f72646572277320636861696e696420646f6573206e6f74206d61746368206360448201527f757272656e7420636861696e69640000000000000000000000000000000000006064820152fd5b1561215557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572206f726465722773207a6f6e6520646f6573206e6f74206d61746360448201527f682074616b6572206f726465722773207a6f6e650000000000000000000000006064820152fd5b156121e057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6f6e6520646f6573206e6f74206d61746368207468697320636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561000e570180359067ffffffffffffffff821161000e5760200191813603831361000e57565b156122bc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b1561234757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f54616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b156123d257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f7264657220696e70757420746f6b656e206973206e6f74206560448201527f7175616c20746f2074616b6572206f72646572206f757470757420746f6b656e6064820152fd5b1561245d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f72646572206f757470757420746f6b656e206973206e6f742060448201527f657175616c20746f2074616b6572206f7264657220696e70757420746f6b656e6064820152fd5b156124e857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f54616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e206d616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b1561257357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e2074616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b156125fe57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b1561266357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f54616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b156126c857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f536572766572207369676e617475726520646f6573206e6f7420636f7272657360448201527f706f6e6420746f206f726465722064657461696c7300000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190820391821161278957565b61021261274c565b3561087281610295565b9190820180921161278957565b9081602091031261000e575161087281610295565b506040513d6000823e3d90fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561000e57016020813591019167ffffffffffffffff821161000e57813603831361000e57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b90610212916128858261286b83610255565b73ffffffffffffffffffffffffffffffffffffffff169052565b6128b161289460208301610255565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b604081013560408301526128e76128ca60608301610255565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b6080810135608083015261291d61290060a08301610255565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b61294961292c60c08301610255565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b61297561295860e08301610255565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b61299261010061298681840161028a565b63ffffffff1690840152565b6129a361012061298681840161028a565b6129b16101408092016102ad565b1515910152565b916108729391926040815273ffffffffffffffffffffffffffffffffffffffff612a6a612aab612a026129eb88806127ca565b9190610360928360408901526103a088019161281a565b90612a136060870160208b01612859565b612a256101c087016101808b01612859565b612a336102e08a018a6127ca565b9490927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09561032094878a840301868b015261281a565b93612a9b612a92612a7f6103008d018d6127ca565b6103409891858c8403018a8d015261281a565b938b018b6127ca565b929091888503019088015261281a565b950135612ab7816101e7565b16610380820152602081850391015261281a565b15612ad257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4265666f7265416f7269547261646520686f6f6b206661696c656400000000006044820152fd5b81604051928392833781016000815203902090565b15612b4c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4166746572416f7269547261646520686f6f6b206661696c65640000000000006044820152fd5b949695916080949391612bc59160a0885260a088019161281a565b9673ffffffffffffffffffffffffffffffffffffffff809481809416602089015216604087015216606085015216910152565b9081602091031261000e575190565b15612c0e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5265656e7472616e6379206775617264000000000000000000000000000000006044820152fd5b919082519283825260005b848110612cb65750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201612c77565b9260609273ffffffffffffffffffffffffffffffffffffffff612d03939796971685526020850152608060408501526080840190612c6c565b931515910152565b15612d1257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c617368206c6f616e206e6f742072657061696400000000000000000000006044820152fd5b61271091820190818311612d9f575b818102918183041490151715612d93570490565b612d9b61274c565b0490565b612da761274c565b612d7f565b6020810151906060604082015191015160001a92601b8410612dca57565b92601b0160ff8111612dd95792565b612de161274c565b92565b999592612eb79760c19c9993612ec39b9695612e8b98605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff1690612ffd612f04602083015173ffffffffffffffffffffffffffffffffffffffff1690565b612fd1604084015193612f2e606082015173ffffffffffffffffffffffffffffffffffffffff1690565b906080810151612f5560a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff1691612f9e61010086015163ffffffff1690565b93612fbf610140612fb761012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f612de4565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610185565b51902090565b61300d8180612264565b6102e08392930161301e9083612264565b8361030082950161302f9082612264565b809161032084016130409085612264565b9561034087959296013597613054896101e7565b6040519a8a8c9b60208d019e8f378b019160208301600081523701916020830160008152370191602083016000815237019060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015203601481018252603401612ffd9082610185565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff92909216602483015260448083019390935291815261021291613126606483610185565b6131b4565b909261021293604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff8211176131a7575b6040526131b4565b6131af610134565b61319f565b60008073ffffffffffffffffffffffffffffffffffffffff6131eb93169360208151910182865af16131e461324d565b908361327d565b8051908115159182613232575b50506132015750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b61324592506020809183010191016127a8565b1538806131f8565b3d15613278573d9061325e826107d7565b9161326c6040519384610185565b82523d6000602084013e565b606090565b906132bc575080511561329257805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613314575b6132cd575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156132c5565b613327838361343b565b50600481959295101561340c571593846133e9575b50831561334a575b50505090565b600092935090829160405161339c81612fd160208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a87526024840152604060448401526064830190612c6c565b51915afa906133a961324d565b826133db575b826133bf575b5050388080613344565b90915060208180518101031261000e57602001511438806133b5565b9150602082511015916133af565b73ffffffffffffffffffffffffffffffffffffffff83811691161493503861333c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815191906041830361346c5761346592506020820151906060604084015193015160001a90613477565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161350a57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156134fd575b805173ffffffffffffffffffffffffffffffffffffffff8116156134f457918190565b50809160019190565b6135056127bd565b6134d1565b5050506000916003919056fea2646970667358221220c30d5f6f8434c8bb567b370ae0822e826624cb4e8ffec1a00c9d21c369201f5864736f6c63430008110033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_serverSigner, overrides || {});
  }
  override deploy(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_serverSigner, overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
