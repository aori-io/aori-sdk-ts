/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_serverSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getMatchingHash",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "matchingHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IAoriV2.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTakerFee",
    inputs: [],
    outputs: [
      {
        name: "feeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasOrderSettled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "settled",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setTakerFee",
    inputs: [
      {
        name: "_newFeeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newFeeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settleOrders",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "serverSignature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "signatureIntoComponents",
    inputs: [
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "withFee",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountWithFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withoutFee",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountMinusFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "FeeReceived",
    inputs: [
      {
        name: "feeRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeTag",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OrdersSettled",
    inputs: [
      {
        name: "makerHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "takerHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "maker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "taker",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "zone",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
      {
        name: "matchingHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a03461007357601f6200336738819003918201601f19168301916001600160401b038311848410176100785780849260209460405283398101031261007357516001600160a01b0381168103610073576080526040516132d890816200008f8239608051818181610dcc01526117ae0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063112f6a761461011757806318a466ed1461010e5780633394177b146101055780637294093c146100fc5780637a54ff25146100f35780638340f549146100ea57806384d7a7f1146100e1578063b4ec369f146100d8578063d23cc5af146100cf578063e61be4da146100c6578063f3fef3a3146100bd578063f7888aec146100b45763ff628b46146100ac57600080fd5b61000e611a5e565b5061000e6119c0565b5061000e61190d565b5061000e6118b3565b5061000e611758565b5061000e6116e8565b5061000e6106e4565b5061000e6105e7565b5061000e610586565b5061000e61056b565b5061000e61050c565b5061000e610476565b5061000e610366565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161016457604052565b61016c610120565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761016457604052565b60405190610160820182811067ffffffffffffffff82111761016457604052565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b600435906101fe826101d3565b565b602435906101fe826101d3565b606435906101fe826101d3565b60a435906101fe826101d3565b60c435906101fe826101d3565b60e435906101fe826101d3565b35906101fe826101d3565b63ffffffff81160361000e57565b61010435906101fe8261024c565b61012435906101fe8261024c565b35906101fe8261024c565b8015150361000e57565b61014435906101fe82610281565b35906101fe82610281565b91908261016091031261000e576102b96101b2565b916102c381610241565b83526102d160208201610241565b6020840152604081013560408401526102ec60608201610241565b60608401526080810135608084015261030760a08201610241565b60a084015261031860c08201610241565b60c084015261032960e08201610241565b60e084015261010061033c818301610276565b9084015261012061034e818301610276565b90840152610360610140809201610299565b90830152565b503461000e576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061042d6103a46101b2565b6103ac6101f1565b81526103b6610200565b8382015260443560408201526103ca61020d565b606082015260843560808201526103df61021a565b60a08201526103ec610227565b60c08201526103f9610234565b60e082015261040661025a565b610100820152610414610268565b61012082015261042261028b565b610140820152612c5b565b604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606091011261000e5760043561046b816101d3565b906024359060443590565b503461000e5761048536610435565b6127109250818302918015908304841417156104f4575b82018092116104e7575b81156104b85760209160405191048152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6104ef6125ab565b6104a6565b6104fc6125ab565b61049c565b600091031261000e57565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576002546003546040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915290f35b503461000e57602061042d61057f36610435565b9150612b04565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206105dd60043560ff6001918060081c6000526000602052161b60406000205416151590565b6040519015158152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435610623816101d3565b61068d602435610632816101d3565b6044359273ffffffffffffffffffffffffffffffffffffffff9061065a853033858716612ea6565b16600052600160205260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b805491820180921161069c5755005b6106a46125ab565b55005b908161034091031261000e5790565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e576107309036906004016106a7565b9060243581811161000e576107499036906004016106b6565b92909160443590811161000e576107649036906004016106b6565b91906107736101008301611c4a565b429063ffffffff16111561078690611c54565b426107946102608401611c4a565b63ffffffff1611156107a590611cdf565b426107b36101208401611c4a565b63ffffffff1610156107c490611d6a565b426107d26102808401611c4a565b63ffffffff1610156107e390611df5565b6107ef60e08301611e80565b6107fc6102408401611e80565b73ffffffffffffffffffffffffffffffffffffffff166108329173ffffffffffffffffffffffffffffffffffffffff1614611e8a565b61083e60e08301611e80565b61085f9073ffffffffffffffffffffffffffffffffffffffff164614611f15565b61086b60c08301611e80565b6108786102208401611e80565b73ffffffffffffffffffffffffffffffffffffffff166108ae9173ffffffffffffffffffffffffffffffffffffffff1614611fa0565b6108ba60c08301611e80565b6108db9073ffffffffffffffffffffffffffffffffffffffff16301461202b565b6108e536836102a4565b6108ee90612c5b565b936108fd3661016085016102a4565b61090690612c5b565b956109156102c08501856120b6565b369061092092611693565b61092990612b40565b919061093487611e80565b926040516020810190806109728d84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526109a29082610171565b5190209160405193849260208401926109f09391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610a209083610171565b610a2992613098565b610a3290612107565b610a406102e08501856120b6565b3690610a4b92611693565b610a5490612b40565b9190610a636101608801611e80565b928a604051806020810192610aa29084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610ad29082610171565b519020916040519384926020840192610b209391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610b509083610171565b610b5992613098565b610b6290612192565b610b6e60208501611e80565b610b7b6101c08601611e80565b73ffffffffffffffffffffffffffffffffffffffff16610bb19173ffffffffffffffffffffffffffffffffffffffff161461221d565b610bbd60608501611e80565b610bca6101808601611e80565b73ffffffffffffffffffffffffffffffffffffffff16610c009173ffffffffffffffffffffffffffffffffffffffff16146122a8565b610c1560408501356101e08601351115612333565b610c2160608501611e80565b50600354610c33906080860135612b04565b6101a08501351015610c44906123be565b610c678660ff6001918060081c6000526000602052161b60406000205416151590565b15610c7190612449565b610c948760ff6001918060081c6000526000602052161b60406000205416151590565b15610c9e906124ae565b3690610ca992611693565b610cb290612b40565b610cbe85939293612d97565b604051806020810192610cfb9084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610d2b9082610171565b51902090604051938493610d5993859094939260ff6060936080840197845216602083015260408201520152565b6000805203905a916000916001602094fa15927fe88cb0855166f459f1e0289cd647a1cccffd3ad7095d86997a9a32014d571e2f9361163d575b610df2610db560005173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614612520565b610e15858060081c6000526000602052600160ff604060002092161b8154179055565b610e38868060081c6000526000602052600160ff604060002092161b8154179055565b610e6e610e486101608501611e80565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b610ea96101a085013591610e856101808701611e80565b73ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541061160f57610ecf610ec2610e486101608601611e80565b610e856101808601611e80565b610edf6101a085013582546125db565b90555b610ef6610ef261014085016125f0565b1590565b156115e657610f19610f0d610e4860a08601611e80565b610e8560608601611e80565b610f28608085013582546125fa565b90555b610f3483611e80565b3b151580611533575b611499575b610f4e610e4884611e80565b610f63604085013591610e8560208701611e80565b541061146b57610f84610f78610e4885611e80565b610e8560208601611e80565b610f93604085013582546125db565b90555b610fa6610ef26102a085016125f0565b1561143957610fcb610fbe610e486102008601611e80565b610e856101c08601611e80565b610fdb6101e085013582546125fa565b90555b600354806113e3575b506101e08301356040840135116113a6575b60808301356101a08401351161134a575b73ffffffffffffffffffffffffffffffffffffffff61102c6103208501611e80565b7ff0cc2afd53c1c049bed798781c8b04fa99891b75feb5cebfdd8289d6c9ee438d61105b6103008701876120b6565b9390926110ea61106d60208a01611e80565b946110816101e08b013560408c01356125db565b966110ab61109160608d01611e80565b916110a560808e01356101a08f01356125db565b93612960565b9760405195869516978590606092959493608083019673ffffffffffffffffffffffffffffffffffffffff809316845260208401521660408201520152565b0390a36110f683611e80565b3b151580611297575b6111cf575b505061110f81611e80565b906111ca6111206101608301611e80565b9161112d60208201611e80565b9361113a60608301611e80565b9161114760c08201611e80565b9061115460e08201611e80565b9261115e82612d97565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815298831660208a0152988216888a0152948116606088015296810135608080880191909152013560a0860152851660c085015290931660e0830152610100820192909252908190610120820190565b0390a3005b602061123a91611254936112016111e86111e888611e80565b73ffffffffffffffffffffffffffffffffffffffff1690565b9060006040518096819582947f72a222570000000000000000000000000000000000000000000000000000000084528b6004850161280a565b03925af190811561128a575b60009161125b575b50612975565b3880611104565b61127d915060203d602011611283575b6112758183610171565b810190612607565b3861124e565b503d61126b565b611292612513565b611246565b506112a76111e86111e885611e80565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061130460048201907f72a2225700000000000000000000000000000000000000000000000000000000602083019252565b03915afa90811561133d575b60009161131e575b506110ff565b611337915060203d602011611283576112758183610171565b38611318565b611345612513565b611310565b61135660608401611e80565b5061137561136a6003546080860135612b04565b6101a08501356125db565b61139f61139761138b610e486103208801611e80565b610e8560608801611e80565b9182546125fa565b905561100a565b6113b96101e084013560408501356125db565b6113dc6113976113cf610e486103208801611e80565b610e856101c08801611e80565b9055610ff9565b611409906113f360608601611e80565b506080850135906114049082612b04565b6125db565b61143161139761138b610e4860025473ffffffffffffffffffffffffffffffffffffffff1690565b905538610fe7565b61146661144c6111e86101c08601611e80565b6101e0850135906114606102008701611e80565b90612e3f565b610fde565b61149461147d6111e860208601611e80565b604085013590309061148e87611e80565b90612ea6565b610f96565b6115026114ab6111e86111e886611e80565b602060405180927f1eca0a59000000000000000000000000000000000000000000000000000000008252816000816114e8898b8d6004850161280a565b03925af1908115611526575b600091611507575b506128fb565b610f42565b611520915060203d602011611283576112758183610171565b386114fc565b61152e612513565b6114f4565b506115436111e86111e885611e80565b602060405180927f01ffc9a700000000000000000000000000000000000000000000000000000000825281806115a060048201907f1eca0a5900000000000000000000000000000000000000000000000000000000602083019252565b03915afa9081156115d9575b6000916115ba575b50610f3d565b6115d3915060203d602011611283576112758183610171565b386115b4565b6115e1612513565b6115ac565b61160a6115f86111e860608601611e80565b60808501359061146060a08701611e80565b610f2b565b6116386116226111e86101808601611e80565b6101a085013590309061148e6101608801611e80565b610ee2565b611645612513565b610d93565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111611686575b01160190565b61168e610120565b611680565b92919261169f8261164a565b916116ad6040519384610171565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e578160206116e593359101611693565b90565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761174261173d60609236906004016116ca565b612b40565b9060ff6040519316835260208301526040820152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611794816101d3565b60243573ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036118305761182961182e926117e86064841115612a79565b73ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b600355565b005b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4f6e6c7920736572766572207369676e65722063616e207365742074616b657260448201527f20666565000000000000000000000000000000000000000000000000000000006064820152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761042d61190860209236906004016106a7565b612d97565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761182e60043561194c816101d3565b602435903360005260016020526119878160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b8054908382039182116119b3575b5573ffffffffffffffffffffffffffffffffffffffff339116612e3f565b6119bb6125ab565b611995565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611a55600435611a01816101d3565b73ffffffffffffffffffffffffffffffffffffffff60243591611a23836101d3565b166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611a9a816101d3565b602435611aa6816101d3565b6044359060643567ffffffffffffffff811161000e57611aca9036906004016116ca565b608435611ad681610281565b8015611c0a57611afd848673ffffffffffffffffffffffffffffffffffffffff8616612e3f565b73ffffffffffffffffffffffffffffffffffffffff91828616803b1561000e5782600091611b5d93836040518096819582947fe84afff60000000000000000000000000000000000000000000000000000000084528d8d60048601612a38565b03925af18015611bfd575b611be4575b5015611b80579261182e93309216612ea6565b50611bd890611bb3611be0939473ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b9182546125db565b9055005b80611bf1611bf792610150565b80610501565b38611b6d565b611c05612513565b611b68565b611c3883611bb38773ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b611c438582546125fa565b9055611afd565b356116e58161024c565b15611c5b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611ce657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611d7157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b15611dfc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b356116e5816101d3565b15611e9157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d616b6572206f72646572277320636861696e696420646f6573206e6f74206d60448201527f617463682074616b6572206f72646572277320636861696e69640000000000006064820152fd5b15611f1c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f72646572277320636861696e696420646f6573206e6f74206d61746368206360448201527f757272656e7420636861696e69640000000000000000000000000000000000006064820152fd5b15611fa757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572206f726465722773207a6f6e6520646f6573206e6f74206d61746360448201527f682074616b6572206f726465722773207a6f6e650000000000000000000000006064820152fd5b1561203257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6f6e6520646f6573206e6f74206d61746368207468697320636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561000e570180359067ffffffffffffffff821161000e5760200191813603831361000e57565b1561210e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b1561219957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f54616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b1561222457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f7264657220696e70757420746f6b656e206973206e6f74206560448201527f7175616c20746f2074616b6572206f72646572206f757470757420746f6b656e6064820152fd5b156122af57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f72646572206f757470757420746f6b656e206973206e6f742060448201527f657175616c20746f2074616b6572206f7264657220696e70757420746f6b656e6064820152fd5b1561233a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f54616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e206d616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b156123c557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e2074616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b1561245057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b156124b557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f54616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b506040513d6000823e3d90fd5b1561252757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f536572766572207369676e617475726520646f6573206e6f7420636f7272657360448201527f706f6e6420746f206f726465722064657461696c7300000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082039182116125e857565b6101fe6125ab565b356116e581610281565b919082018092116125e857565b9081602091031261000e57516116e581610281565b906101fe916126488261262e83610241565b73ffffffffffffffffffffffffffffffffffffffff169052565b61267461265760208301610241565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b604081013560408301526126aa61268d60608301610241565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b608081013560808301526126e06126c360a08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b61270c6126ef60c08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b61273861271b60e08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b612755610100612749818401610276565b63ffffffff1690840152565b612766610120612749818401610276565b612774610140809201610299565b1515910152565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561000e57016020813591019167ffffffffffffffff821161000e57813603831361000e57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b916116e593919260408152612822604082018561261c565b6128346101a08201610160860161261c565b73ffffffffffffffffffffffffffffffffffffffff6128db61285a6102c087018761277b565b61287661034093926103009285848901526103808801916127cb565b926128c26128cb61288b6102e08c018c61277b565b9290967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09361032098858c8403018a8d01526127cb565b938b018b61277b565b92909188850301908801526127cb565b9501356128e7816101d3565b1661036082015260208185039101526127cb565b1561290257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4265666f7265416f7269547261646520686f6f6b206661696c656400000000006044820152fd5b81604051928392833781016000815203902090565b1561297c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4166746572416f7269547261646520686f6f6b206661696c65640000000000006044820152fd5b919082519283825260005b848110612a245750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016129e5565b9260609273ffffffffffffffffffffffffffffffffffffffff612a719397969716855260208501526080604085015260808401906129da565b931515910152565b15612a8057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f50726f746f636f6c2074616b6572206665652073686f756c64206265206c657360448201527f73207468616e206f7220657175616c20746f20312500000000000000000000006064820152fd5b61271091820190818311612b33575b818102918183041490151715612b27570490565b612b2f6125ab565b0490565b612b3b6125ab565b612b13565b6020810151906060604082015191015160001a92601b8410612b5e57565b92601b0160ff8111612b6d5792565b612b756125ab565b92565b999592612c4b9760c19c9993612c579b9695612c1f98605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff1690612d91612c98602083015173ffffffffffffffffffffffffffffffffffffffff1690565b612d65604084015193612cc2606082015173ffffffffffffffffffffffffffffffffffffffff1690565b906080810151612ce960a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff1691612d3261010086015163ffffffff1690565b93612d53610140612d4b61012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f612b78565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610171565b51902090565b610320612d916034612dad6102c08501856120b6565b90947fffffffffffffffffffffffffffffffffffffffff000000000000000000000000612dde6102e08301836120b6565b96909287612df06103008301836120b6565b9384929193013595612e01876101d3565b6040519a888c9960208b019e8f378901916020830160008152370191602083016000815237019160601b166020820152036014810184520182610171565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9290921660248301526044808301939093529181526101fe91612ea1606483610171565b612f2f565b90926101fe93604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff821117612f22575b604052612f2f565b612f2a610120565b612f1a565b60008073ffffffffffffffffffffffffffffffffffffffff612f6693169360208151910182865af1612f5f612fc8565b9083612ff8565b8051908115159182612fad575b5050612f7c5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b612fc09250602080918301019101612607565b153880612f73565b3d15612ff3573d90612fd98261164a565b91612fe76040519384610171565b82523d6000602084013e565b606090565b90613037575080511561300d57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b8151158061308f575b613048575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613040565b6130a283836131b6565b50600481959295101561318757159384613164575b5083156130c5575b50505090565b600092935090829160405161311781612d6560208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a875260248401526040604484015260648301906129da565b51915afa90613124612fc8565b82613156575b8261313a575b50503880806130bf565b90915060208180518101031261000e5760200151143880613130565b91506020825110159161312a565b73ffffffffffffffffffffffffffffffffffffffff8381169116149350386130b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81519190604183036131e7576131e092506020820151906060604084015193015160001a906131f2565b9192909190565b505060009160029190565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161329657916132489160209360405195869094939260ff6060936080840197845216602083015260408201520152565b826000938492838052039060015afa15613289575b805173ffffffffffffffffffffffffffffffffffffffff81161561328057918190565b50809160019190565b613291612513565b61325d565b5060009360039350905056fea2646970667358221220757508f467ca8c4fba6872f674e7d18cef102749c4b4a72b02d64ba725dbe69364736f6c63430008110033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_serverSigner, overrides || {});
  }
  override deploy(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_serverSigner, overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
