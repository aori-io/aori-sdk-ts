/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_serverSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getMatchingHash",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "matchingHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IAoriV2.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasOrderSettled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "settled",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "settleOrders",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "serverSignature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "signatureIntoComponents",
    inputs: [
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "FeeReceived",
    inputs: [
      {
        name: "feeRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeTag",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OrdersSettled",
    inputs: [
      {
        name: "tradeId",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "maker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "taker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "matchingHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "makerOrderHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "takerOrderHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "zone",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a034620000c857601f6200339e38819003918201601f19168301916001600160401b03831184841017620000cd57808492602094604052833981010312620000c857516001600160a01b038116808203620000c8571562000077576080526040516132ba9081620000e4823960805181610e820152f35b60405162461bcd60e51b8152602060048201526024808201527f536572766572207369676e65722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063112f6a76146100c75780637a54ff25146100be5780638340f549146100b557806388661f9a146100ac578063b4ec369f146100a3578063efb1d54c1461009a578063f3fef3a314610091578063f7888aec146100885763ff628b461461008057600080fd5b61000e611971565b5061000e6118d3565b5061000e6116ec565b5061000e6107cd565b5061000e61072f565b5061000e610637565b5061000e610474565b5061000e610413565b3461000e576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061010a61010536610296565b612c48565b604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161015657604052565b61015e610112565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761015657604052565b60405190610160820182811067ffffffffffffffff82111761015657604052565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b600435906101f0826101c5565b565b602435906101f0826101c5565b606435906101f0826101c5565b60a435906101f0826101c5565b60c435906101f0826101c5565b60e435906101f0826101c5565b35906101f0826101c5565b63ffffffff81160361000e57565b61010435906101f08261023e565b61012435906101f08261023e565b35906101f08261023e565b8015150361000e57565b61014435906101f082610273565b35906101f082610273565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc61016091011261000e576102c96101a4565b906102d26101e3565b82526102dc6101f2565b602083015260443560408301526102f16101ff565b6060830152608435608083015261030661020c565b60a0830152610313610219565b60c0830152610320610226565b60e083015261032d61024c565b61010083015261033b61025a565b61012083015261034961027d565b610140830152565b91908261016091031261000e576103666101a4565b9161037081610233565b835261037e60208201610233565b60208401526040810135604084015261039960608201610233565b6060840152608081013560808401526103b460a08201610233565b60a08401526103c560c08201610233565b60c08401526103d660e08201610233565b60e08401526101006103e9818301610268565b908401526101206103fb818301610268565b9084015261040d61014080920161028b565b90830152565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061046a60043560ff6001918060081c6000526000602052161b60406000205416151590565b6040519015158152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356104b0816101c5565b6105bc6105b46024356104c2816101c5565b6040517f70a082310000000000000000000000000000000000000000000000000000000080825230600483015261058f916105689160209073ffffffffffffffffffffffffffffffffffffffff8616908284602481855afa93841561061b575b6000946105fa575b50829061053b604435303386612eab565b60405190815230600482015291829060249082905afa9182156105ed575b6000926105c0575b505061257c565b9473ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b91825461259b565b9055005b6105df9250803d106105e6575b6105d78183610163565b8101906129aa565b3880610561565b503d6105cd565b6105f56125bd565b610559565b8391945061061490823d84116105e6576105d78183610163565b939061052a565b6106236125bd565b610522565b908161036091031261000e5790565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761010a61068c6020923690600401610628565b612d84565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff81116106cd575b01160190565b6106d5610112565b6106c7565b9291926106e682610691565b916106f46040519384610163565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e5781602061072c933591016106da565b90565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e576107896107846060923690600401610711565b612b2d565b9060ff6040519316835260208301526040820152f35b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610819903690600401610628565b9060243581811161000e5761083290369060040161079f565b9160443590811161000e5761084b90369060040161079f565b906108596101208601611bf8565b429063ffffffff16111561086c90611c02565b4261087a6102808701611bf8565b63ffffffff16111561088b90611c8d565b426108996101408701611bf8565b63ffffffff1610156108aa90611d18565b426108b86102a08701611bf8565b63ffffffff1610156108c990611da3565b6108d66101008601611e2e565b6108e36102608701611e2e565b73ffffffffffffffffffffffffffffffffffffffff166109199173ffffffffffffffffffffffffffffffffffffffff1614611e38565b6109266101008601611e2e565b6109479073ffffffffffffffffffffffffffffffffffffffff164614611ec3565b61095360e08601611e2e565b6109606102408701611e2e565b73ffffffffffffffffffffffffffffffffffffffff166109969173ffffffffffffffffffffffffffffffffffffffff1614611f4e565b6109a260e08601611e2e565b6109c39073ffffffffffffffffffffffffffffffffffffffff163014611fd9565b6109d03660208701610351565b6109d990612c48565b926109e8366101808801610351565b6109f190612c48565b94610a006102e0880188612064565b3690610a0b926106da565b610a1490612b2d565b9190610a2260208b01611e2e565b92604051602081019080610a608c84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610a909082610163565b519020916040519384926020840192610ade9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610b0e9083610163565b610b179261308b565b610b20906120b5565b610b2e610300880188612064565b3690610b39926106da565b610b4290612b2d565b9190610b516101808b01611e2e565b92604051602081019080610b8f8d84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610bbf9082610163565b519020916040519384926020840192610c0d9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610c3d9083610163565b610c469261308b565b610c4f90612140565b610c5b60408801611e2e565b610c686101e08901611e2e565b73ffffffffffffffffffffffffffffffffffffffff16610c9e9173ffffffffffffffffffffffffffffffffffffffff16146121cb565b610caa60808801611e2e565b610cb76101a08901611e2e565b73ffffffffffffffffffffffffffffffffffffffff16610ced9173ffffffffffffffffffffffffffffffffffffffff1614612256565b610d02606088013561020089013511156122e1565b610d176101c088013560a0890135111561236c565b610d3a8560ff6001918060081c6000526000602052161b60406000205416151590565b15610d44906123f7565b610d678660ff6001918060081c6000526000602052161b60406000205416151590565b15610d719061245c565b3690610d7c926106da565b610d8590612b2d565b610d9188939293612d84565b604051806020810192610dce9084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610dfe9082610163565b519020926040519283926020840192610e4c9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610e7c9082610163565b610ea6917f000000000000000000000000000000000000000000000000000000000000000061308b565b610eaf906124c1565b610ed2838060081c6000526000602052600160ff604060002092161b8154179055565b610ef5848060081c6000526000602052600160ff604060002092161b8154179055565b610f026101808601611e2e565b610f2c9073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b6101c086013590610f406101a08801611e2e565b610f69919073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541015600014937fe9b9452cf2ec20301e34e65510b55e7c969189adae76569786a523c69be2d6e59273ffffffffffffffffffffffffffffffffffffffff926112dc966116be5761101a610fe9610fc36101808b01611e2e565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b610ff66101a08b01611e2e565b73ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61102a6101c08a0135825461257c565b90555b61104161103d6101608a01612591565b1590565b1561169557611064611058610fc360c08b01611e2e565b610ff660808b01611e2e565b61107360a08a0135825461259b565b90555b61108260208901611e2e565b3b1515806115df575b61153f575b61109f610fc360208a01611e2e565b6110b460608a013591610ff660408c01611e2e565b541061150e576110d86110cc610fc360208b01611e2e565b610ff660408b01611e2e565b6110e760608a0135825461257c565b90555b6110fa61103d6102c08a01612591565b156114dc5761111f611112610fc36102208b01611e2e565b610ff66101e08b01611e2e565b61112f6102008a0135825461259b565b90555b61020088013560608901351161149f575b60a08801356101c089013511611463575b611220887ff0cc2afd53c1c049bed798781c8b04fa99891b75feb5cebfdd8289d6c9ee438d866111876103408401611e2e565b611195610320850185612064565b95906111a360408701611e2e565b956111e16111ba610200830135606084013561257c565b986111db6111ca60808501611e2e565b936101c060a082013591013561257c565b93612930565b9760405195869516978590606092959493608083019673ffffffffffffffffffffffffffffffffffffffff809316845260208401521660408201520152565b0390a38761123060208201611e2e565b3b1515806113ad575b6112e1575b61124b9250809150612064565b959061125960208901611e2e565b976112676101808201611e2e565b9361129461127483612d84565b9961128e61010061128760e08701611e2e565b9501611e2e565b94612930565b604080519a8b5260208b01999099529789015273ffffffffffffffffffffffffffffffffffffffff9081166060890152166080870152908216959091169390819060a0820190565b0390a4005b6113699261134f926113156112fc6112fc6020809601611e2e565b73ffffffffffffffffffffffffffffffffffffffff1690565b9060008c604051968795869485937f27b9a6e6000000000000000000000000000000000000000000000000000000008552600485016127b8565b03925af19081156113a0575b600091611371575b50612945565b38808761123e565b611393915060203d602011611399575b61138b8183610163565b8101906125a8565b38611363565b503d611381565b6113a86125bd565b61135b565b506113c06112fc6112fc60208401611e2e565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061141d60048201907f27b9a6e600000000000000000000000000000000000000000000000000000000602083019252565b03915afa908115611456575b600091611437575b50611239565b611450915060203d6020116113995761138b8183610163565b38611431565b61145e6125bd565b611429565b61147660a08901356101c08a013561257c565b6114986105b461148c610fc36103408d01611e2e565b610ff660808d01611e2e565b9055611154565b6114b261020089013560608a013561257c565b6114d56105b46114c8610fc36103408d01611e2e565b610ff66101e08d01611e2e565b9055611143565b6115096114ef6112fc6101e08b01611e2e565b6102008a0135906115036102208c01611e2e565b90612e2c565b611132565b61153a6115206112fc60408b01611e2e565b60608a013590309061153460208d01611e2e565b90612eab565b6110ea565b6115ae6115946020848b85600061155d6112fc6112fc878601611e2e565b92604051968795869485937f3d4a6079000000000000000000000000000000000000000000000000000000008552600485016127b8565b03925af19081156115d2575b6000916115b3575b506128cb565b611090565b6115cc915060203d6020116113995761138b8183610163565b386115a8565b6115da6125bd565b6115a0565b506115f26112fc6112fc60208b01611e2e565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061164f60048201907f3d4a607900000000000000000000000000000000000000000000000000000000602083019252565b03915afa908115611688575b600091611669575b5061108b565b611682915060203d6020116113995761138b8183610163565b38611663565b6116906125bd565b61165b565b6116b96116a76112fc60808b01611e2e565b60a08a01359061150360c08c01611e2e565b611076565b6116e76116d16112fc6101a08b01611e2e565b6101c08a01359030906115346101808d01611e2e565b61102d565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611728816101c5565b61173f61173a61103d60025460ff1690565b6129b9565b61176f60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006002541617600255565b6040517f70a082310000000000000000000000000000000000000000000000000000000080825230600483015261184a91611842916118179160209173ffffffffffffffffffffffffffffffffffffffff87169083908184602481865afa9384156118c6575b6000946118a7575b506117eb6024353385612e2c565b60405190815230600482015291829060249082905afa92831561189a575b60009361187b57505061257c565b9261058f3373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b91825461257c565b90556118797fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060025416600255565b005b611892929350803d106105e6576105d78183610163565b903880610561565b6118a26125bd565b611809565b6118bf919450823d84116105e6576105d78183610163565b92386117dd565b6118ce6125bd565b6117d5565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611968600435611914816101c5565b73ffffffffffffffffffffffffffffffffffffffff60243591611936836101c5565b166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356119ad816101c5565b602435906119ba826101c5565b6044359160643567ffffffffffffffff811161000e576119de903690600401610711565b926084356119eb81610273565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152909460209473ffffffffffffffffffffffffffffffffffffffff8082169592919087896024818a5afa988915611beb575b600099611bcc575b508515611b8c57611a63848489612e2c565b821694853b1561000e57611ab16000828a986118799d836040518096819582947fe84afff60000000000000000000000000000000000000000000000000000000084528d8c60048601612a87565b03925af18015611b7f575b611b66575b5015611b2e575090611ad591309086612eab565b60405190815230600482015291829060249082905afa918215611b21575b600092611b04575b50501015612ac8565b611b1a9250803d106105e6576105d78183610163565b3880611afb565b611b296125bd565b611af3565b6118429061058f611b5f9373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9055611ad5565b80611b73611b7992610142565b80612a1e565b38611ac1565b611b876125bd565b611abc565b611bba8261058f8573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b611bc585825461259b565b9055611a63565b611be4919950883d8a116105e6576105d78183610163565b9738611a51565b611bf36125bd565b611a49565b3561072c8161023e565b15611c0957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611c9457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b15611d1f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b15611daa57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b3561072c816101c5565b15611e3f57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d616b6572206f72646572277320636861696e696420646f6573206e6f74206d60448201527f617463682074616b6572206f72646572277320636861696e69640000000000006064820152fd5b15611eca57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f72646572277320636861696e696420646f6573206e6f74206d61746368206360448201527f757272656e7420636861696e69640000000000000000000000000000000000006064820152fd5b15611f5557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572206f726465722773207a6f6e6520646f6573206e6f74206d61746360448201527f682074616b6572206f726465722773207a6f6e650000000000000000000000006064820152fd5b15611fe057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6f6e6520646f6573206e6f74206d61746368207468697320636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561000e570180359067ffffffffffffffff821161000e5760200191813603831361000e57565b156120bc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b1561214757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f54616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b156121d257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f7264657220696e70757420746f6b656e206973206e6f74206560448201527f7175616c20746f2074616b6572206f72646572206f757470757420746f6b656e6064820152fd5b1561225d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f72646572206f757470757420746f6b656e206973206e6f742060448201527f657175616c20746f2074616b6572206f7264657220696e70757420746f6b656e6064820152fd5b156122e857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f54616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e206d616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b1561237357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e2074616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b156123fe57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b1561246357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f54616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b156124c857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f536572766572207369676e617475726520646f6573206e6f7420636f7272657360448201527f706f6e6420746f206f726465722064657461696c7300000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190820391821161258957565b6101f061254c565b3561072c81610273565b9190820180921161258957565b9081602091031261000e575161072c81610273565b506040513d6000823e3d90fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561000e57016020813591019167ffffffffffffffff821161000e57813603831361000e57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b906101f0916126858261266b83610233565b73ffffffffffffffffffffffffffffffffffffffff169052565b6126b161269460208301610233565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b604081013560408301526126e76126ca60608301610233565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b6080810135608083015261271d61270060a08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b61274961272c60c08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b61277561275860e08301610233565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b612792610100612786818401610268565b63ffffffff1690840152565b6127a3610120612786818401610268565b6127b161014080920161028b565b1515910152565b9161072c9391926040815273ffffffffffffffffffffffffffffffffffffffff61286a6128ab6128026127eb88806125ca565b9190610360928360408901526103a088019161261a565b906128136060870160208b01612659565b6128256101c087016101808b01612659565b6128336102e08a018a6125ca565b9490927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09561032094878a840301868b015261261a565b9361289b61289261287f6103008d018d6125ca565b6103409891858c8403018a8d015261261a565b938b018b6125ca565b929091888503019088015261261a565b9501356128b7816101c5565b16610380820152602081850391015261261a565b156128d257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4265666f7265416f7269547261646520686f6f6b206661696c656400000000006044820152fd5b81604051928392833781016000815203902090565b1561294c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4166746572416f7269547261646520686f6f6b206661696c65640000000000006044820152fd5b9081602091031261000e575190565b156129c057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5265656e7472616e6379206775617264000000000000000000000000000000006044820152fd5b600091031261000e57565b919082519283825260005b848110612a735750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201612a34565b9260609273ffffffffffffffffffffffffffffffffffffffff612ac0939796971685526020850152608060408501526080840190612a29565b931515910152565b15612acf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c617368206c6f616e206e6f742072657061696400000000000000000000006044820152fd5b6020810151906060604082015191015160001a92601b8410612b4b57565b92601b0160ff8111612b5a5792565b612b6261254c565b92565b999592612c389760c19c9993612c449b9695612c0c98605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff1690612d7e612c85602083015173ffffffffffffffffffffffffffffffffffffffff1690565b612d52604084015193612caf606082015173ffffffffffffffffffffffffffffffffffffffff1690565b906080810151612cd660a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff1691612d1f61010086015163ffffffff1690565b93612d40610140612d3861012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f612b65565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610163565b51902090565b610340612d7e6034612d9a6102e0850185612064565b90947fffffffffffffffffffffffffffffffffffffffff000000000000000000000000612dcb610300830183612064565b96909287612ddd610320830183612064565b9384929193013595612dee876101c5565b6040519a888c9960208b019e8f378901916020830160008152370191602083016000815237019160601b166020820152036014810184520182610163565b6101f09273ffffffffffffffffffffffffffffffffffffffff604051937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526080820182811067ffffffffffffffff821117612e9e575b604052612f22565b612ea6610112565b612e96565b90926101f093604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff821117612e9e576040525b60008073ffffffffffffffffffffffffffffffffffffffff612f5993169360208151910182865af1612f52612fbb565b9083612feb565b8051908115159182612fa0575b5050612f6f5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b612fb392506020809183010191016125a8565b153880612f66565b3d15612fe6573d90612fcc82610691565b91612fda6040519384610163565b82523d6000602084013e565b606090565b9061302a575080511561300057805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613082575b61303b575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613033565b61309583836131a9565b50600481959295101561317a57159384613157575b5083156130b8575b50505090565b600092935090829160405161310a81612d5260208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a87526024840152604060448401526064830190612a29565b51915afa90613117612fbb565b82613149575b8261312d575b50503880806130b2565b90915060208180518101031261000e5760200151143880613123565b91506020825110159161311d565b73ffffffffffffffffffffffffffffffffffffffff8381169116149350386130aa565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81519190604183036131da576131d392506020820151906060604084015193015160001a906131e5565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161327857926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561326b575b805173ffffffffffffffffffffffffffffffffffffffff81161561326257918190565b50809160019190565b6132736125bd565b61323f565b5050506000916003919056fea2646970667358221220bc5dcc6de116dcedb34354a07613da38d86f3a5808f25ff936fc6ed0a6502a1d64736f6c63430008110033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_serverSigner, overrides || {});
  }
  override deploy(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_serverSigner, overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
