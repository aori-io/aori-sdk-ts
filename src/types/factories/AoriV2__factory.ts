/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AoriV2, AoriV2Interface } from "../AoriV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_serverSigner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "_account",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "flashLoan",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "userData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "receiveToken",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getMatchingHash",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "matchingHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOrderHash",
    inputs: [
      {
        name: "order",
        type: "tuple",
        internalType: "struct IAoriV2.Order",
        components: [
          {
            name: "offerer",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "inputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outputToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "outputAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "zone",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainId",
            type: "uint160",
            internalType: "uint160",
          },
          {
            name: "startTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "endTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "toWithdraw",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTakerFee",
    inputs: [],
    outputs: [
      {
        name: "feeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasOrderSettled",
    inputs: [
      {
        name: "orderHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "settled",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setTakerFee",
    inputs: [
      {
        name: "_newFeeRecipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newFeeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "settleOrders",
    inputs: [
      {
        name: "matching",
        type: "tuple",
        internalType: "struct IAoriV2.MatchingDetails",
        components: [
          {
            name: "tradeId",
            type: "string",
            internalType: "string",
          },
          {
            name: "makerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "takerOrder",
            type: "tuple",
            internalType: "struct IAoriV2.Order",
            components: [
              {
                name: "offerer",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "outputToken",
                type: "address",
                internalType: "address",
              },
              {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "recipient",
                type: "address",
                internalType: "address",
              },
              {
                name: "zone",
                type: "address",
                internalType: "address",
              },
              {
                name: "chainId",
                type: "uint160",
                internalType: "uint160",
              },
              {
                name: "startTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "endTime",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "toWithdraw",
                type: "bool",
                internalType: "bool",
              },
            ],
          },
          {
            name: "makerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "takerSignature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "feeTag",
            type: "string",
            internalType: "string",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "serverSignature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "hookData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "signatureIntoComponents",
    inputs: [
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "v",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "r",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "withFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withoutFee",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "feeInBips",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "FeeReceived",
    inputs: [
      {
        name: "feeRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "feeTag",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "inputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "inputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "outputAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OrdersSettled",
    inputs: [
      {
        name: "tradeId",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "maker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "taker",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "matchingHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "makerOrderHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "takerOrderHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "zone",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainId",
        type: "uint160",
        indexed: false,
        internalType: "uint160",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a034620000c857601f6200377f38819003918201601f19168301916001600160401b03831184841017620000cd57808492602094604052833981010312620000c857516001600160a01b038116808203620000c85715620000775760805260405161369b9081620000e48239608051816111c50152f35b60405162461bcd60e51b8152602060048201526024808201527f536572766572207369676e65722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c8063112f6a76146101175780631749c0161461010e5780633394177b146101055780637a54ff25146100fc5780638340f549146100f357806388661f9a146100ea578063b4ec369f146100e1578063d23cc5af146100d8578063e3e3f281146100cf578063efb1d54c146100c6578063f3fef3a3146100bd578063f7888aec146100b45763ff628b46146100ac57600080fd5b61000e611d27565b5061000e611c89565b5061000e611aa4565b5061000e610b03565b5061000e610a25565b5061000e61086b565b5061000e6107fb565b5061000e610703565b5061000e610540565b5061000e6104df565b5061000e610480565b5061000e610435565b5061000e610366565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161016457604052565b61016c610120565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761016457604052565b60405190610160820182811067ffffffffffffffff82111761016457604052565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b600435906101fe826101d3565b565b602435906101fe826101d3565b606435906101fe826101d3565b60a435906101fe826101d3565b60c435906101fe826101d3565b60e435906101fe826101d3565b35906101fe826101d3565b63ffffffff81160361000e57565b61010435906101fe8261024c565b61012435906101fe8261024c565b35906101fe8261024c565b8015150361000e57565b61014435906101fe82610281565b35906101fe82610281565b91908261016091031261000e576102b96101b2565b916102c381610241565b83526102d160208201610241565b6020840152604081013560408401526102ec60608201610241565b60608401526080810135608084015261030760a08201610241565b60a084015261031860c08201610241565b60c084015261032960e08201610241565b60e084015261010061033c818301610276565b9084015261012061034e818301610276565b90840152610360610140809201610299565b90830152565b503461000e576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061042d6103a46101b2565b6103ac6101f1565b81526103b6610200565b8382015260443560408201526103ca61020d565b606082015260843560808201526103df61021a565b60a08201526103ec610227565b60c08201526103f9610234565b60e082015261040661025a565b610100820152610414610268565b61012082015261042261028b565b61014082015261302f565b604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061042d602435600435612ed8565b600091031261000e57565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576002546003546040805173ffffffffffffffffffffffffffffffffffffffff9093168352602083019190915290f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602061053660043560ff6001918060081c6000526000602052161b60406000205416151590565b6040519015158152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043561057c816101d3565b61068861068060243561058e816101d3565b6040517f70a082310000000000000000000000000000000000000000000000000000000080825230600483015261065b916106349160209073ffffffffffffffffffffffffffffffffffffffff8616908284602481855afa9384156106e7575b6000946106c6575b50829061060760443530338661327a565b60405190815230600482015291829060249082905afa9182156106b9575b60009261068c575b5050612932565b9473ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b918254612951565b9055005b6106ab9250803d106106b2575b6106a38183610171565b810190612d60565b388061062d565b503d610699565b6106c1612973565b610625565b839194506106e090823d84116106b2576106a38183610171565b93906105f6565b6106ef612973565b6105ee565b908161036091031261000e5790565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761042d61075860209236906004016106f4565b61316b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610799575b01160190565b6107a1610120565b610793565b9291926107b28261075d565b916107c06040519384610171565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e578160206107f8933591016107a6565b90565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e5761085561085060609236906004016107dd565b612f14565b9060ff6040519316835260208301526040820152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576004356108a7816101d3565b60243573ffffffffffffffffffffffffffffffffffffffff8216156109a257606481101561091e5761091761091c9273ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b600355565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f46656520696e20626970732063616e6e6f74206265206772656174657220746860448201527f616e2031250000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f46656520726563697069656e742063616e6e6f74206265207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5761271060043581810290801590820483141715610ac8575b6024358201809211610abb575b8115610a8c5760209160405191048152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610ac3612902565b610a7a565b610ad0612902565b610a6d565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b5060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610b4f9036906004016106f4565b9060243581811161000e57610b68903690600401610ad5565b9160443590811161000e57610b81903690600401610ad5565b90610b8f6101208601611fae565b429063ffffffff161115610ba290611fb8565b42610bb06102808701611fae565b63ffffffff161115610bc190612043565b42610bcf6101408701611fae565b63ffffffff161015610be0906120ce565b42610bee6102a08701611fae565b63ffffffff161015610bff90612159565b610c0c61010086016121e4565b610c1961026087016121e4565b73ffffffffffffffffffffffffffffffffffffffff16610c4f9173ffffffffffffffffffffffffffffffffffffffff16146121ee565b610c5c61010086016121e4565b610c7d9073ffffffffffffffffffffffffffffffffffffffff164614612279565b610c8960e086016121e4565b610c9661024087016121e4565b73ffffffffffffffffffffffffffffffffffffffff16610ccc9173ffffffffffffffffffffffffffffffffffffffff1614612304565b610cd860e086016121e4565b610cf99073ffffffffffffffffffffffffffffffffffffffff16301461238f565b610d0636602087016102a4565b610d0f9061302f565b92610d1e3661018088016102a4565b610d279061302f565b94610d366102e088018861241a565b3690610d41926107a6565b610d4a90612f14565b9190610d5860208b016121e4565b92604051602081019080610d968c84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610dc69082610171565b519020916040519384926020840192610e149391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610e449083610171565b610e4d9261346c565b610e569061246b565b610e6461030088018861241a565b3690610e6f926107a6565b610e7890612f14565b9190610e876101808b016121e4565b92604051602081019080610ec58d84603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018252610ef59082610171565b519020916040519384926020840192610f439391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018352610f739083610171565b610f7c9261346c565b610f85906124f6565b610f91604088016121e4565b610f9e6101e089016121e4565b73ffffffffffffffffffffffffffffffffffffffff16610fd49173ffffffffffffffffffffffffffffffffffffffff1614612581565b610fe0608088016121e4565b610fed6101a089016121e4565b73ffffffffffffffffffffffffffffffffffffffff166110239173ffffffffffffffffffffffffffffffffffffffff161461260c565b61103860608801356102008901351115612697565b6003546110499060a0890135612ed8565b6101c0880135101561105a90612722565b61107d8560ff6001918060081c6000526000602052161b60406000205416151590565b15611087906127ad565b6110aa8660ff6001918060081c6000526000602052161b60406000205416151590565b156110b490612812565b36906110bf926107a6565b6110c890612f14565b6110d48893929361316b565b6040518060208101926111119084603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526111419082610171565b51902092604051928392602084019261118f9391926041937fff00000000000000000000000000000000000000000000000000000000000000928452602084015260f81b1660408201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526111bf9082610171565b6111e9917f000000000000000000000000000000000000000000000000000000000000000061346c565b6111f290612877565b611215838060081c6000526000602052600160ff604060002092161b8154179055565b611238848060081c6000526000602052600160ff604060002092161b8154179055565b61124561018086016121e4565b61126f9073ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b6101c0860135906112836101a088016121e4565b6112ac919073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541015600014937fe9b9452cf2ec20301e34e65510b55e7c969189adae76569786a523c69be2d6e59273ffffffffffffffffffffffffffffffffffffffff9261164196611a765761135d61132c6113066101808b016121e4565b73ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b6113396101a08b016121e4565b73ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61136d6101c08a01358254612932565b90555b6113846113806101608a01612947565b1590565b15611a4d576113a761139b61130660c08b016121e4565b61133960808b016121e4565b6113b660a08a01358254612951565b90555b6113c5602089016121e4565b3b151580611997575b6118f7575b6113e261130660208a016121e4565b6113f760608a01359161133960408c016121e4565b54106118c65761141b61140f61130660208b016121e4565b61133960408b016121e4565b61142a60608a01358254612932565b90555b61143d6113806102c08a01612947565b15611894576114626114556113066102208b016121e4565b6113396101e08b016121e4565b6114726102008a01358254612951565b90555b6003548061184b575b5061020088013560608901351161180e575b6003546114a18160a08b0135612ed8565b6101c08a0135116117c8575b50611585887ff0cc2afd53c1c049bed798781c8b04fa99891b75feb5cebfdd8289d6c9ee438d866114e161034084016121e4565b6114ef61032085018561241a565b95906114fd604087016121e4565b956115466115146102008301356060840135612932565b98611540611524608085016121e4565b936101c061153860035460a0840135612ed8565b910135612932565b93612ce6565b9760405195869516978590606092959493608083019673ffffffffffffffffffffffffffffffffffffffff809316845260208401521660408201520152565b0390a387611595602082016121e4565b3b151580611712575b611646575b6115b0925080915061241a565b95906115be602089016121e4565b976115cc61018082016121e4565b936115f96115d98361316b565b996115f36101006115ec60e087016121e4565b95016121e4565b94612ce6565b604080519a8b5260208b01999099529789015273ffffffffffffffffffffffffffffffffffffffff9081166060890152166080870152908216959091169390819060a0820190565b0390a4005b6116ce926116b49261167a61166161166160208096016121e4565b73ffffffffffffffffffffffffffffffffffffffff1690565b9060008c604051968795869485937f27b9a6e600000000000000000000000000000000000000000000000000000000855260048501612b6e565b03925af1908115611705575b6000916116d6575b50612cfb565b3880876115a3565b6116f8915060203d6020116116fe575b6116f08183610171565b81019061295e565b386116c8565b503d6116e6565b61170d612973565b6116c0565b50611725611661611661602084016121e4565b602060405180927f01ffc9a7000000000000000000000000000000000000000000000000000000008252818061178260048201907f27b9a6e600000000000000000000000000000000000000000000000000000000602083019252565b03915afa9081156117bb575b60009161179c575b5061159e565b6117b5915060203d6020116116fe576116f08183610171565b38611796565b6117c3612973565b61178e565b6117d96117e49160a08b0135612ed8565b6101c08a0135612932565b6118066106806117fa6113066103408d016121e4565b61133960808d016121e4565b9055386114ad565b61182161020089013560608a0135612932565b6118446106806118376113066103408d016121e4565b6113396101e08d016121e4565b9055611490565b6118649060a08a01359061185f9082612ed8565b612932565b61188c6106806117fa61130660025473ffffffffffffffffffffffffffffffffffffffff1690565b90553861147e565b6118c16118a76116616101e08b016121e4565b6102008a0135906118bb6102208c016121e4565b90613213565b611475565b6118f26118d861166160408b016121e4565b60608a01359030906118ec60208d016121e4565b9061327a565b61142d565b61196661194c6020848b8560006119156116616116618786016121e4565b92604051968795869485937f3d4a607900000000000000000000000000000000000000000000000000000000855260048501612b6e565b03925af190811561198a575b60009161196b575b50612c81565b6113d3565b611984915060203d6020116116fe576116f08183610171565b38611960565b611992612973565b611958565b506119aa61166161166160208b016121e4565b602060405180927f01ffc9a70000000000000000000000000000000000000000000000000000000082528180611a0760048201907f3d4a607900000000000000000000000000000000000000000000000000000000602083019252565b03915afa908115611a40575b600091611a21575b506113ce565b611a3a915060203d6020116116fe576116f08183610171565b38611a1b565b611a48612973565b611a13565b611a71611a5f61166160808b016121e4565b60a08a0135906118bb60c08c016121e4565b6113b9565b611a9f611a896116616101a08b016121e4565b6101c08a01359030906118ec6101808d016121e4565b611370565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611ae0816101d3565b611af7611af261138060045460ff1690565b612d6f565b611b2760017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152611c0291611bfa91611bcf9160209173ffffffffffffffffffffffffffffffffffffffff87169083908184602481865afa938415611c7c575b600094611c5d575b50611ba36024353385613213565b60405190815230600482015291829060249082905afa928315611c50575b600093611c31575050612932565b9261065b3373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b918254612932565b905561091c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060045416600455565b611c48929350803d106106b2576106a38183610171565b90388061062d565b611c58612973565b611bc1565b611c75919450823d84116106b2576106a38183610171565b9238611b95565b611c84612973565b611b8d565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611d1e600435611cca816101d3565b73ffffffffffffffffffffffffffffffffffffffff60243591611cec836101d3565b166000526001835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b503461000e5760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435611d63816101d3565b60243590611d70826101d3565b6044359160643567ffffffffffffffff811161000e57611d949036906004016107dd565b92608435611da181610281565b6040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152909460209473ffffffffffffffffffffffffffffffffffffffff8082169592919087896024818a5afa988915611fa1575b600099611f82575b508515611f4257611e19848489613213565b821694853b1561000e57611e676000828a9861091c9d836040518096819582947fe84afff60000000000000000000000000000000000000000000000000000000084528d8c60048601612e32565b03925af18015611f35575b611f1c575b5015611ee4575090611e8b9130908661327a565b60405190815230600482015291829060249082905afa918215611ed7575b600092611eba575b50501015612e73565b611ed09250803d106106b2576106a38183610171565b3880611eb1565b611edf612973565b611ea9565b611bfa9061065b611f159373ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b9055611e8b565b80611f29611f2f92610150565b80610475565b38611e77565b611f3d612973565b611e72565b611f708261065b8573ffffffffffffffffffffffffffffffffffffffff166000526001602052604060002090565b611f7b858254612951565b9055611e19565b611f9a919950883d8a116106b2576106a38183610171565b9738611e07565b611fa9612973565b611dff565b356107f88161024c565b15611fbf57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b1561204a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f726465722073746172742074696d6520697320696e2074686560448201527f20667574757265000000000000000000000000000000000000000000000000006064820152fd5b156120d557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b1561216057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f54616b6572206f7264657220656e642074696d652068617320616c726561647960448201527f20706173736564000000000000000000000000000000000000000000000000006064820152fd5b356107f8816101d3565b156121f557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d616b6572206f72646572277320636861696e696420646f6573206e6f74206d60448201527f617463682074616b6572206f72646572277320636861696e69640000000000006064820152fd5b1561228057565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f72646572277320636861696e696420646f6573206e6f74206d61746368206360448201527f757272656e7420636861696e69640000000000000000000000000000000000006064820152fd5b1561230b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572206f726465722773207a6f6e6520646f6573206e6f74206d61746360448201527f682074616b6572206f726465722773207a6f6e650000000000000000000000006064820152fd5b1561239657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5a6f6e6520646f6573206e6f74206d61746368207468697320636f6e7472616360448201527f74000000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561000e570180359067ffffffffffffffff821161000e5760200191813603831361000e57565b1561247257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f4d616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b156124fd57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f54616b6572207369676e617475726520646f6573206e6f7420636f727265737060448201527f6f6e6420746f206f726465722064657461696c730000000000000000000000006064820152fd5b1561258857565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f7264657220696e70757420746f6b656e206973206e6f74206560448201527f7175616c20746f2074616b6572206f72646572206f757470757420746f6b656e6064820152fd5b1561261357565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604060248201527f4d616b6572206f72646572206f757470757420746f6b656e206973206e6f742060448201527f657175616c20746f2074616b6572206f7264657220696e70757420746f6b656e6064820152fd5b1561269e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f54616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e206d616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b1561272957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4d616b6572206f72646572206f757470757420616d6f756e74206973206d6f7260448201527f65207468616e2074616b6572206f7264657220696e70757420616d6f756e74006064820152fd5b156127b457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4d616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b1561281957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f54616b6572206f7264657220686173206265656e20736574746c6564000000006044820152fd5b1561287e57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f536572766572207369676e617475726520646f6573206e6f7420636f7272657360448201527f706f6e6420746f206f726465722064657461696c7300000000000000000000006064820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190820391821161293f57565b6101fe612902565b356107f881610281565b9190820180921161293f57565b9081602091031261000e57516107f881610281565b506040513d6000823e3d90fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561000e57016020813591019167ffffffffffffffff821161000e57813603831361000e57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b906101fe91612a3b82612a2183610241565b73ffffffffffffffffffffffffffffffffffffffff169052565b612a67612a4a60208301610241565b73ffffffffffffffffffffffffffffffffffffffff166020840152565b60408101356040830152612a9d612a8060608301610241565b73ffffffffffffffffffffffffffffffffffffffff166060840152565b60808101356080830152612ad3612ab660a08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660a0840152565b612aff612ae260c08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660c0840152565b612b2b612b0e60e08301610241565b73ffffffffffffffffffffffffffffffffffffffff1660e0840152565b612b48610100612b3c818401610276565b63ffffffff1690840152565b612b59610120612b3c818401610276565b612b67610140809201610299565b1515910152565b916107f89391926040815273ffffffffffffffffffffffffffffffffffffffff612c20612c61612bb8612ba18880612980565b9190610360928360408901526103a08801916129d0565b90612bc96060870160208b01612a0f565b612bdb6101c087016101808b01612a0f565b612be96102e08a018a612980565b9490927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc09561032094878a840301868b01526129d0565b93612c51612c48612c356103008d018d612980565b6103409891858c8403018a8d01526129d0565b938b018b612980565b92909188850301908801526129d0565b950135612c6d816101d3565b1661038082015260208185039101526129d0565b15612c8857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4265666f7265416f7269547261646520686f6f6b206661696c656400000000006044820152fd5b81604051928392833781016000815203902090565b15612d0257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4166746572416f7269547261646520686f6f6b206661696c65640000000000006044820152fd5b9081602091031261000e575190565b15612d7657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5265656e7472616e6379206775617264000000000000000000000000000000006044820152fd5b919082519283825260005b848110612e1e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201612ddf565b9260609273ffffffffffffffffffffffffffffffffffffffff612e6b939796971685526020850152608060408501526080840190612dd4565b931515910152565b15612e7a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f466c617368206c6f616e206e6f742072657061696400000000000000000000006044820152fd5b61271091820190818311612f07575b818102918183041490151715612efb570490565b612f03612902565b0490565b612f0f612902565b612ee7565b6020810151906060604082015191015160001a92601b8410612f3257565b92601b0160ff8111612f415792565b612f49612902565b92565b99959261301f9760c19c999361302b9b9695612ff398605c8f7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809a81988280988160609d8e1b1686528c1b1660148501526028840152891b1660488201520152841b16607c8d0152821b1660908b01521b1660a488015260b88701907fffffffff000000000000000000000000000000000000000000000000000000009060e01b169052565b60e01b7fffffffff000000000000000000000000000000000000000000000000000000001660bc850152565b151560f81b60c0830152565b0190565b805173ffffffffffffffffffffffffffffffffffffffff169061316561306c602083015173ffffffffffffffffffffffffffffffffffffffff1690565b613139604084015193613096606082015173ffffffffffffffffffffffffffffffffffffffff1690565b9060808101516130bd60a083015173ffffffffffffffffffffffffffffffffffffffff1690565b60c083015173ffffffffffffffffffffffffffffffffffffffff1660e084015173ffffffffffffffffffffffffffffffffffffffff169161310661010086015163ffffffff1690565b9361312761014061311f61012089015163ffffffff1690565b970151151590565b966040519b8c9a60208c019e8f612f4c565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610171565b51902090565b61034061316560346131816102e085018561241a565b90947fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006131b261030083018361241a565b969092876131c461032083018361241a565b93849291930135956131d5876101d3565b6040519a888c9960208b019e8f378901916020830160008152370191602083016000815237019160601b166020820152036014810184520182610171565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff9290921660248301526044808301939093529181526101fe91613275606483610171565b613303565b90926101fe93604051937f23b872dd00000000000000000000000000000000000000000000000000000000602086015273ffffffffffffffffffffffffffffffffffffffff809216602486015216604484015260648301526064825260a0820182811067ffffffffffffffff8211176132f6575b604052613303565b6132fe610120565b6132ee565b60008073ffffffffffffffffffffffffffffffffffffffff61333a93169360208151910182865af161333361339c565b90836133cc565b8051908115159182613381575b50506133505750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b613394925060208091830101910161295e565b153880613347565b3d156133c7573d906133ad8261075d565b916133bb6040519384610171565b82523d6000602084013e565b606090565b9061340b57508051156133e157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580613463575b61341c575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15613414565b613476838361358a565b50600481959295101561355b57159384613538575b508315613499575b50505090565b60009293509082916040516134eb8161313960208201947f1626ba7e00000000000000000000000000000000000000000000000000000000998a87526024840152604060448401526064830190612dd4565b51915afa906134f861339c565b8261352a575b8261350e575b5050388080613493565b90915060208180518101031261000e5760200151143880613504565b9150602082511015916134fe565b73ffffffffffffffffffffffffffffffffffffffff83811691161493503861348b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81519190604183036135bb576135b492506020820151906060604084015193015160001a906135c6565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161365957926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561364c575b805173ffffffffffffffffffffffffffffffffffffffff81161561364357918190565b50809160019190565b613654612973565b613620565b5050506000916003919056fea26469706673582212207de1305b2c50b66fa0b658aef83bf53190a57bedfdfbe5d8b9789f1e9492a95964736f6c63430008110033";

type AoriV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AoriV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AoriV2__factory extends ContractFactory {
  constructor(...args: AoriV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_serverSigner, overrides || {});
  }
  override deploy(
    _serverSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_serverSigner, overrides || {}) as Promise<
      AoriV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AoriV2__factory {
    return super.connect(runner) as AoriV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AoriV2Interface {
    return new Interface(_abi) as AoriV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): AoriV2 {
    return new Contract(address, _abi, runner) as unknown as AoriV2;
  }
}
